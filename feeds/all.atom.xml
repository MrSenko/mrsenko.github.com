<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Mr. Senko - Open Source Wizards</title><link href="http://mrsenko.com/" rel="alternate"></link><link href="http://mrsenko.com/feeds/all.atom.xml" rel="self"></link><id>http://mrsenko.com/</id><updated>2017-05-31T12:30:00+03:00</updated><entry><title>KiwiTestPad bug-fix and enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/31/kiwitestpad-bug-fix-and-enhancement-update/" rel="alternate"></link><published>2017-05-31T12:30:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-31:blog/mr-senko/2017/05/31/kiwitestpad-bug-fix-and-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; kiwitestpad-3.22
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-31
&lt;strong&gt;Severity:&lt;/strong&gt; Medium
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/kiwi/"&gt;http://MrSenko.com/kiwi/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;KiwiTestPad is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;This release brings several bug fixes as well as lots of internal improvements
to facilitate migration to latest Django versions and Python 3 in the near future.&lt;/p&gt;
&lt;h2&gt;Changes since KiwiTestPad 3.21.2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Multiple refactorings of deprecated Django features (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Added more tests (Chenxiong Qi)&lt;/li&gt;
&lt;li&gt;Replace deprecated XML2Dict with xmltodict. Fixes
  &lt;a href="https://github.com/MrSenko/Kiwi/issues/10"&gt;Issue #10&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use mysqlclient instead of MySQL-python. Fixes
  &lt;a href="https://github.com/MrSenko/Kiwi/issues/14"&gt;Issue #14&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Make TestCase changelog display state changes using their names. Fixes
  &lt;a href="https://github.com/MrSenko/Kiwi/issues/9"&gt;Issue #9&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Multiple documentation improvements, including documentation of all
  configuration settings (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade kiwitestpad
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using KiwiTestPad as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm kiwi_web_1 kiwi_db_1
docker-compose up -d
docker exec -it kiwi_web_1 /Kiwi/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/kiwi-docker/blob/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
and the &lt;code&gt;mrsenko/kiwi&lt;/code&gt; Docker image for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate is now KiwiTestPad</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/26/nitrate-is-now-kiwitestpad/" rel="alternate"></link><published>2017-05-26T12:30:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-26:blog/mr-senko/2017/05/26/nitrate-is-now-kiwitestpad/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; kiwitestpad-3.21.2
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-26
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/kiwi/"&gt;http://MrSenko.com/kiwi/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;KiwiTestPad is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Starting with this release the product will be available under the name
&lt;strong&gt;KiwiTestPad&lt;/strong&gt; with an upstream repository at &lt;a href="https://github.com/MrSenko/Kiwi/"&gt;https://github.com/MrSenko/Kiwi/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We have been working actively with the upstream Nitrate project in the past
several months. However the community is practically unresponsive and without
a clear vision how to develop in the future. The PR velocity is very slow and
pull requests have been opened for months and years. This is why at Mr. Senko
we have decided to fork the project completely and drive the new community on our
own!&lt;/p&gt;
&lt;p&gt;The most important changes you can expect in the short-term future are
complete integration with JIRA and GitHub,
improvements to documentation, improved support for running as Docker container,
migration to latest Django versions and migration to Python 3, cleaning up of
obsolete dependencies and streamlining the process of creating customized
configuration of KiwiTestPad, improved visual design and simplified UX!&lt;/p&gt;
&lt;h2&gt;Changes since Nitrate 3.8.18.21&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NITRATE_BASE_URL&lt;/code&gt; has been renamed to &lt;code&gt;KIWI_BASE_URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;/tmp/.bugzilla&lt;/code&gt; for python-bugzilla cache to avoid 500 ISE
  when running as Docker container&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade kiwitestpad
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using KiwiTestPad as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm kiwi_web_1 kiwi_db_1
docker-compose up -d
docker exec -it kiwi_web_1 /Kiwi/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/kiwi-docker/blob/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
and the &lt;code&gt;mrsenko/kiwi&lt;/code&gt; Docker image for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/25/nitrate-enhancement-update/" rel="alternate"></link><published>2017-05-25T10:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-25:blog/mr-senko/2017/05/25/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.21
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-25
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/nitrate/"&gt;http://MrSenko.com/nitrate/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package and Docker image are now available which introduce
several improvements. Among them is the full ability to configure external
issue trackers via the Admin menu and allow functional integration between
Nitrate and issue trackers. This release supports full integration with
Bugzilla. Full integration with JIRA will be available in upcoming releases.&lt;/p&gt;
&lt;h2&gt;Changes since 3.8.18.18&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto f7e2c6c from upstream which includes&lt;ul&gt;
&lt;li&gt;PRs #197, #198, #199, #200, #201, #202, #204: removal of deprecated
  &lt;code&gt;request.REQUEST&lt;/code&gt; and more tests (tkdchen)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/203"&gt;PR #203&lt;/a&gt;: Minor fixes
  (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fixed failing test cases on PostgreSQL and MySQL (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Remove unused doctest. PR #205 (tkdchen)&lt;/li&gt;
&lt;li&gt;Fixes &lt;a href="https://github.com/Nitrate/Nitrate/issues/185"&gt;Issue #185&lt;/a&gt;:
  Improve integrations between Nitrate and external bug tracking systems
  (Mr. Senko). In particular:&lt;ul&gt;
&lt;li&gt;removed all hard-coded issue tracker settings&lt;/li&gt;
&lt;li&gt;allow issue trackers to be configured entirely in the DB&lt;/li&gt;
&lt;li&gt;re-implemented the functionality to open all bugs inside
  the issue tracker by clicking a single link at the bottom
  of the test run reports page&lt;/li&gt;
&lt;li&gt;re-implemented the "Check to add test case(s) to Issue Tracker"
  checkbox when adding a bug to a test case run&lt;/li&gt;
&lt;li&gt;re-implemented the "Report" bug functionality, which will pre-load
  the chosen Issue Tracker with information about the test case
  which was used to discover the bug.&lt;/li&gt;
&lt;li&gt;NOTE: full integration is available only for Bugzilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Issue trackers are documented in the
&lt;a href="http://nitrate-mrsenko.readthedocs.io/en/latest/guide/admin.html#adding-bug-trackers"&gt;Administration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces new database migrations so don't forget to
execute &lt;code&gt;./manage.py migrate&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release includes updated static files so don't forget to
execute &lt;code&gt;./manage.py collectstatic&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces a new configuration setting called
&lt;code&gt;NITRATE_BASE_URL&lt;/code&gt;. It defines the FQDN of your Nitrate instance!
This setting is used to construct a URL linking back to test
cases and test runs when reporting bugs!&lt;/p&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using Nitrate as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm nitrate_web_1 nitrate_db_1
docker-compose up -d
docker exec -it nitrate_web_1 /Nitrate/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/Nitrate/blob/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/25/nitrate-enhancement-update/" rel="alternate"></link><published>2017-05-25T10:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-25:blog/mr-senko/2017/05/25/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.21
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-25
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/nitrate/"&gt;http://MrSenko.com/nitrate/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package and Docker image are now available which introduce
several improvements. Among them is the full ability to configure external
issue trackers via the Admin menu and allow functional integration between
Nitrate and issue trackers. This release supports full integration with
Bugzilla. Full integration with JIRA will be available in upcoming releases.&lt;/p&gt;
&lt;h2&gt;Changes since 3.8.18.18&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto f7e2c6c from upstream which includes&lt;ul&gt;
&lt;li&gt;PRs #197, #198, #199, #200, #201, #202, #204: removal of deprecated
  &lt;code&gt;request.REQUEST&lt;/code&gt; and more tests (tkdchen)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/203"&gt;PR #203&lt;/a&gt;: Minor fixes
  (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fixed failing test cases on PostgreSQL and MySQL (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Remove unused doctest. PR #205 (tkdchen)&lt;/li&gt;
&lt;li&gt;Fixes &lt;a href="https://github.com/Nitrate/Nitrate/issues/185"&gt;Issue #185&lt;/a&gt;:
  Improve integrations between Nitrate and external bug tracking systems
  (Mr. Senko). In particular:&lt;ul&gt;
&lt;li&gt;removed all hard-coded issue tracker settings&lt;/li&gt;
&lt;li&gt;allow issue trackers to be configured entirely in the DB&lt;/li&gt;
&lt;li&gt;re-implemented the functionality to open all bugs inside
  the issue tracker by clicking a single link at the bottom
  of the test run reports page&lt;/li&gt;
&lt;li&gt;re-implemented the "Check to add test case(s) to Issue Tracker"
  checkbox when adding a bug to a test case run&lt;/li&gt;
&lt;li&gt;re-implemented the "Report" bug functionality, which will pre-load
  the chosen Issue Tracker with information about the test case
  which was used to discover the bug.&lt;/li&gt;
&lt;li&gt;NOTE: full integration is available only for Bugzilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Issue trackers are documented in the
&lt;a href="http://nitrate-mrsenko.readthedocs.io/en/latest/guide/admin.html#adding-bug-trackers"&gt;Administration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces new database migrations so don't forget to
execute &lt;code&gt;./manage.py migrate&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release includes updated static files so don't forget to
execute &lt;code&gt;./manage.py collectstatic&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces a new configuration setting called
&lt;code&gt;NITRATE_BASE_URL&lt;/code&gt;. It defines the FQDN of your Nitrate instance!
This setting is used to construct a URL linking back to test
cases and test runs when reporting bugs!&lt;/p&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using Nitrate as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm nitrate_web_1 nitrate_db_1
docker-compose up -d
docker exec -it nitrate_web_1 /Nitrate/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/Nitrate/blob/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/25/nitrate-enhancement-update/" rel="alternate"></link><published>2017-05-25T10:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-25:blog/mr-senko/2017/05/25/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.21
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-25
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/nitrate/"&gt;http://MrSenko.com/nitrate/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package and Docker image are now available which introduce
several improvements. Among them is the full ability to configure external
issue trackers via the Admin menu and allow functional integration between
Nitrate and issue trackers. This release supports full integration with
Bugzilla. Full integration with JIRA will be available in upcoming releases.&lt;/p&gt;
&lt;h2&gt;Changes since 3.8.18.18&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto f7e2c6c from upstream which includes&lt;ul&gt;
&lt;li&gt;PRs #197, #198, #199, #200, #201, #202, #204: removal of deprecated
  &lt;code&gt;request.REQUEST&lt;/code&gt; and more tests (tkdchen)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/203"&gt;PR #203&lt;/a&gt;: Minor fixes
  (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fixed failing test cases on PostgreSQL and MySQL (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Remove unused doctest. PR #205 (tkdchen)&lt;/li&gt;
&lt;li&gt;Fixes &lt;a href="https://github.com/Nitrate/Nitrate/issues/185"&gt;Issue #185&lt;/a&gt;:
  Improve integrations between Nitrate and external bug tracking systems
  (Mr. Senko). In particular:&lt;ul&gt;
&lt;li&gt;removed all hard-coded issue tracker settings&lt;/li&gt;
&lt;li&gt;allow issue trackers to be configured entirely in the DB&lt;/li&gt;
&lt;li&gt;re-implemented the functionality to open all bugs inside
  the issue tracker by clicking a single link at the bottom
  of the test run reports page&lt;/li&gt;
&lt;li&gt;re-implemented the "Check to add test case(s) to Issue Tracker"
  checkbox when adding a bug to a test case run&lt;/li&gt;
&lt;li&gt;re-implemented the "Report" bug functionality, which will pre-load
  the chosen Issue Tracker with information about the test case
  which was used to discover the bug.&lt;/li&gt;
&lt;li&gt;NOTE: full integration is available only for Bugzilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Issue trackers are documented in the
&lt;a href="http://nitrate-mrsenko.readthedocs.io/en/latest/guide/admin.html#adding-bug-trackers"&gt;Administration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces new database migrations so don't forget to
execute &lt;code&gt;./manage.py migrate&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release includes updated static files so don't forget to
execute &lt;code&gt;./manage.py collectstatic&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces a new configuration setting called
&lt;code&gt;NITRATE_BASE_URL&lt;/code&gt;. It defines the FQDN of your Nitrate instance!
This setting is used to construct a URL linking back to test
cases and test runs when reporting bugs!&lt;/p&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using Nitrate as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm nitrate_web_1 nitrate_db_1
docker-compose up -d
docker exec -it nitrate_web_1 /Nitrate/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/Nitrate/blob/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/25/nitrate-enhancement-update/" rel="alternate"></link><published>2017-05-25T10:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-25:blog/mr-senko/2017/05/25/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.21
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-25
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/nitrate/"&gt;http://MrSenko.com/nitrate/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package and Docker image are now available which introduce
several improvements. Among them is the full ability to configure external
issue trackers via the Admin menu and allow functional integration between
Nitrate and issue trackers. This release supports full integration with
Bugzilla. Full integration with JIRA will be available in upcoming releases.&lt;/p&gt;
&lt;h2&gt;Changes since 3.8.18.18&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto f7e2c6c from upstream which includes&lt;ul&gt;
&lt;li&gt;PRs #197, #198, #199, #200, #201, #202, #204: removal of deprecated
  &lt;code&gt;request.REQUEST&lt;/code&gt; and more tests (tkdchen)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/203"&gt;PR #203&lt;/a&gt;: Minor fixes
  (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fixed failing test cases on PostgreSQL and MySQL (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Remove unused doctest. PR #205 (tkdchen)&lt;/li&gt;
&lt;li&gt;Fixes &lt;a href="https://github.com/Nitrate/Nitrate/issues/185"&gt;Issue #185&lt;/a&gt;:
  Improve integrations between Nitrate and external bug tracking systems
  (Mr. Senko). In particular:&lt;ul&gt;
&lt;li&gt;removed all hard-coded issue tracker settings&lt;/li&gt;
&lt;li&gt;allow issue trackers to be configured entirely in the DB&lt;/li&gt;
&lt;li&gt;re-implemented the functionality to open all bugs inside
  the issue tracker by clicking a single link at the bottom
  of the test run reports page&lt;/li&gt;
&lt;li&gt;re-implemented the "Check to add test case(s) to Issue Tracker"
  checkbox when adding a bug to a test case run&lt;/li&gt;
&lt;li&gt;re-implemented the "Report" bug functionality, which will pre-load
  the chosen Issue Tracker with information about the test case
  which was used to discover the bug.&lt;/li&gt;
&lt;li&gt;NOTE: full integration is available only for Bugzilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Issue trackers are documented in the
&lt;a href="http://nitrate-mrsenko.readthedocs.io/en/latest/guide/admin.html#adding-bug-trackers"&gt;Administration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces new database migrations so don't forget to
execute &lt;code&gt;./manage.py migrate&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release includes updated static files so don't forget to
execute &lt;code&gt;./manage.py collectstatic&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces a new configuration setting called
&lt;code&gt;NITRATE_BASE_URL&lt;/code&gt;. It defines the FQDN of your Nitrate instance!
This setting is used to construct a URL linking back to test
cases and test runs when reporting bugs!&lt;/p&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using Nitrate as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm nitrate_web_1 nitrate_db_1
docker-compose up -d
docker exec -it nitrate_web_1 /Nitrate/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/Nitrate/blob/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/25/nitrate-enhancement-update/" rel="alternate"></link><published>2017-05-25T10:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-25:blog/mr-senko/2017/05/25/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.21
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-25
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/nitrate/"&gt;http://MrSenko.com/nitrate/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package and Docker image are now available which introduce
several improvements. Among them is the full ability to configure external
issue trackers via the Admin menu and allow functional integration between
Nitrate and issue trackers. This release supports full integration with
Bugzilla. Full integration with JIRA will be available in upcoming releases.&lt;/p&gt;
&lt;h2&gt;Changes since 3.8.18.18&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto f7e2c6c from upstream which includes&lt;ul&gt;
&lt;li&gt;PRs #197, #198, #199, #200, #201, #202, #204: removal of deprecated
  &lt;code&gt;request.REQUEST&lt;/code&gt; and more tests (tkdchen)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/203"&gt;PR #203&lt;/a&gt;: Minor fixes
  (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fixed failing test cases on PostgreSQL and MySQL (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Remove unused doctest. PR #205 (tkdchen)&lt;/li&gt;
&lt;li&gt;Fixes &lt;a href="https://github.com/Nitrate/Nitrate/issues/185"&gt;Issue #185&lt;/a&gt;:
  Improve integrations between Nitrate and external bug tracking systems
  (Mr. Senko). In particular:&lt;ul&gt;
&lt;li&gt;removed all hard-coded issue tracker settings&lt;/li&gt;
&lt;li&gt;allow issue trackers to be configured entirely in the DB&lt;/li&gt;
&lt;li&gt;re-implemented the functionality to open all bugs inside
  the issue tracker by clicking a single link at the bottom
  of the test run reports page&lt;/li&gt;
&lt;li&gt;re-implemented the "Check to add test case(s) to Issue Tracker"
  checkbox when adding a bug to a test case run&lt;/li&gt;
&lt;li&gt;re-implemented the "Report" bug functionality, which will pre-load
  the chosen Issue Tracker with information about the test case
  which was used to discover the bug.&lt;/li&gt;
&lt;li&gt;NOTE: full integration is available only for Bugzilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Issue trackers are documented in the
&lt;a href="http://nitrate-mrsenko.readthedocs.io/en/latest/guide/admin.html#adding-bug-trackers"&gt;Administration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces new database migrations so don't forget to
execute &lt;code&gt;./manage.py migrate&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release includes updated static files so don't forget to
execute &lt;code&gt;./manage.py collectstatic&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces a new configuration setting called
&lt;code&gt;NITRATE_BASE_URL&lt;/code&gt;. It defines the FQDN of your Nitrate instance!
This setting is used to construct a URL linking back to test
cases and test runs when reporting bugs!&lt;/p&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using Nitrate as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm nitrate_web_1 nitrate_db_1
docker-compose up -d
docker exec -it nitrate_web_1 /Nitrate/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/Nitrate/blob/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/25/nitrate-enhancement-update/" rel="alternate"></link><published>2017-05-25T10:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-25:blog/mr-senko/2017/05/25/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.21
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-25
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/nitrate/"&gt;http://MrSenko.com/nitrate/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package and Docker image are now available which introduce
several improvements. Among them is the full ability to configure external
issue trackers via the Admin menu and allow functional integration between
Nitrate and issue trackers. This release supports full integration with
Bugzilla. Full integration with JIRA will be available in upcoming releases.&lt;/p&gt;
&lt;h2&gt;Changes since 3.8.18.18&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto f7e2c6c from upstream which includes&lt;ul&gt;
&lt;li&gt;PRs #197, #198, #199, #200, #201, #202, #204: removal of deprecated
  &lt;code&gt;request.REQUEST&lt;/code&gt; and more tests (tkdchen)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/203"&gt;PR #203&lt;/a&gt;: Minor fixes
  (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fixed failing test cases on PostgreSQL and MySQL (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Remove unused doctest. PR #205 (tkdchen)&lt;/li&gt;
&lt;li&gt;Fixes &lt;a href="https://github.com/Nitrate/Nitrate/issues/185"&gt;Issue #185&lt;/a&gt;:
  Improve integrations between Nitrate and external bug tracking systems
  (Mr. Senko). In particular:&lt;ul&gt;
&lt;li&gt;removed all hard-coded issue tracker settings&lt;/li&gt;
&lt;li&gt;allow issue trackers to be configured entirely in the DB&lt;/li&gt;
&lt;li&gt;re-implemented the functionality to open all bugs inside
  the issue tracker by clicking a single link at the bottom
  of the test run reports page&lt;/li&gt;
&lt;li&gt;re-implemented the "Check to add test case(s) to Issue Tracker"
  checkbox when adding a bug to a test case run&lt;/li&gt;
&lt;li&gt;re-implemented the "Report" bug functionality, which will pre-load
  the chosen Issue Tracker with information about the test case
  which was used to discover the bug.&lt;/li&gt;
&lt;li&gt;NOTE: full integration is available only for Bugzilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Issue trackers are documented in the
&lt;a href="http://nitrate-mrsenko.readthedocs.io/en/latest/guide/admin.html#adding-bug-trackers"&gt;Administration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces new database migrations so don't forget to
execute &lt;code&gt;./manage.py migrate&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release includes updated static files so don't forget to
execute &lt;code&gt;./manage.py collectstatic&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces a new configuration setting called
&lt;code&gt;NITRATE_BASE_URL&lt;/code&gt;. It defines the FQDN of your Nitrate instance!
This setting is used to construct a URL linking back to test
cases and test runs when reporting bugs!&lt;/p&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using Nitrate as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm nitrate_web_1 nitrate_db_1
docker-compose up -d
docker exec -it nitrate_web_1 /Nitrate/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/Nitrate/blob/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/25/nitrate-enhancement-update/" rel="alternate"></link><published>2017-05-25T10:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-25:blog/mr-senko/2017/05/25/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.21
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-25
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/nitrate/"&gt;http://MrSenko.com/nitrate/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package and Docker image are now available which introduce
several improvements. Among them is the full ability to configure external
issue trackers via the Admin menu and allow functional integration between
Nitrate and issue trackers. This release supports full integration with
Bugzilla. Full integration with JIRA will be available in upcoming releases.&lt;/p&gt;
&lt;h2&gt;Changes since 3.8.18.18&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto f7e2c6c from upstream which includes&lt;ul&gt;
&lt;li&gt;PRs #197, #198, #199, #200, #201, #202, #204: removal of deprecated
  &lt;code&gt;request.REQUEST&lt;/code&gt; and more tests (tkdchen)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/203"&gt;PR #203&lt;/a&gt;: Minor fixes
  (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fixed failing test cases on PostgreSQL and MySQL (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Remove unused doctest. PR #205 (tkdchen)&lt;/li&gt;
&lt;li&gt;Fixes &lt;a href="https://github.com/Nitrate/Nitrate/issues/185"&gt;Issue #185&lt;/a&gt;:
  Improve integrations between Nitrate and external bug tracking systems
  (Mr. Senko). In particular:&lt;ul&gt;
&lt;li&gt;removed all hard-coded issue tracker settings&lt;/li&gt;
&lt;li&gt;allow issue trackers to be configured entirely in the DB&lt;/li&gt;
&lt;li&gt;re-implemented the functionality to open all bugs inside
  the issue tracker by clicking a single link at the bottom
  of the test run reports page&lt;/li&gt;
&lt;li&gt;re-implemented the "Check to add test case(s) to Issue Tracker"
  checkbox when adding a bug to a test case run&lt;/li&gt;
&lt;li&gt;re-implemented the "Report" bug functionality, which will pre-load
  the chosen Issue Tracker with information about the test case
  which was used to discover the bug.&lt;/li&gt;
&lt;li&gt;NOTE: full integration is available only for Bugzilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Issue trackers are documented in the
&lt;a href="http://nitrate-mrsenko.readthedocs.io/en/latest/guide/admin.html#adding-bug-trackers"&gt;Administration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces new database migrations so don't forget to
execute &lt;code&gt;./manage.py migrate&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release includes updated static files so don't forget to
execute &lt;code&gt;./manage.py collectstatic&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces a new configuration setting called
&lt;code&gt;NITRATE_BASE_URL&lt;/code&gt;. It defines the FQDN of your Nitrate instance!
This setting is used to construct a URL linking back to test
cases and test runs when reporting bugs!&lt;/p&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using Nitrate as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm nitrate_web_1 nitrate_db_1
docker-compose up -d
docker exec -it nitrate_web_1 /Nitrate/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/Nitrate/blob/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate bug-fix and enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/01/nitrate-bug-fix-and-enhancement-update/" rel="alternate"></link><published>2017-05-01T15:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-01:blog/mr-senko/2017/05/01/nitrate-bug-fix-and-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.18
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-01
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/nitrate/"&gt;http://MrSenko.com/nitrate/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package and Docker image are now available which fix several bugs
and introduce big improvements related to using external bug trackers with Nitrate!
Further improvements related to bugtracker integration will be available in the
next release.&lt;/p&gt;
&lt;h2&gt;Changes since 3.8.18.17&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto a2363f8 from upstream&lt;/li&gt;
&lt;li&gt;Add default permissions to groups.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/191"&gt;PR #191&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/186"&gt;Issue #186&lt;/a&gt;:
  Errata field visible when &lt;code&gt;ERRATA_URL_PREFIX&lt;/code&gt; is empty.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/188"&gt;PR #188&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/181"&gt;Issue #181&lt;/a&gt;:
  Failed to delete testplan or product.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/182"&gt;PR #182&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Add link to Administration guide in footer (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update MOTD displayed on login/registration form (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Updated RPMs inside Docker image (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use bug trackers defined in the DB.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/79"&gt;PR #79&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces new database migrations so don't forget to
execute &lt;code&gt;./manage.py migrate&lt;/code&gt;!&lt;/p&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/79"&gt;PR #79&lt;/a&gt; -
  Use bug trackers defined in the DB&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/172"&gt;PR #172&lt;/a&gt; -
  Refactor sql in testplans&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/177"&gt;PR #177&lt;/a&gt; -
  Refactor SQL in testcases and fix #174&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/178"&gt;PR #178&lt;/a&gt; -
  Fix tags search and hint while adding tags to test cases in TP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/180"&gt;PR #180&lt;/a&gt; -
  Build Nitrate as docker image&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/174"&gt;Issue #174&lt;/a&gt; -
  Error when remove tag from a plan's case&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/181"&gt;Issue #181&lt;/a&gt; -
  Failed to delete testplan or product&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/186"&gt;Issue #186&lt;/a&gt; -
  Errata field visible when &lt;code&gt;ERRATA_URL_PREFIX&lt;/code&gt; is empty&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using Nitrate as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm nitrate_web_1 nitrate_db_1
docker-compose up -d
docker exec -it nitrate_web_1 /Nitrate/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/Nitrate/blob/version_3.8.18/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate bug-fix and enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/01/nitrate-bug-fix-and-enhancement-update/" rel="alternate"></link><published>2017-05-01T15:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-01:blog/mr-senko/2017/05/01/nitrate-bug-fix-and-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.18
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-01
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/nitrate/"&gt;http://MrSenko.com/nitrate/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package and Docker image are now available which fix several bugs
and introduce big improvements related to using external bug trackers with Nitrate!
Further improvements related to bugtracker integration will be available in the
next release.&lt;/p&gt;
&lt;h2&gt;Changes since 3.8.18.17&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto a2363f8 from upstream&lt;/li&gt;
&lt;li&gt;Add default permissions to groups.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/191"&gt;PR #191&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/186"&gt;Issue #186&lt;/a&gt;:
  Errata field visible when &lt;code&gt;ERRATA_URL_PREFIX&lt;/code&gt; is empty.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/188"&gt;PR #188&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/181"&gt;Issue #181&lt;/a&gt;:
  Failed to delete testplan or product.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/182"&gt;PR #182&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Add link to Administration guide in footer (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update MOTD displayed on login/registration form (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Updated RPMs inside Docker image (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use bug trackers defined in the DB.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/79"&gt;PR #79&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces new database migrations so don't forget to
execute &lt;code&gt;./manage.py migrate&lt;/code&gt;!&lt;/p&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/79"&gt;PR #79&lt;/a&gt; -
  Use bug trackers defined in the DB&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/172"&gt;PR #172&lt;/a&gt; -
  Refactor sql in testplans&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/177"&gt;PR #177&lt;/a&gt; -
  Refactor SQL in testcases and fix #174&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/178"&gt;PR #178&lt;/a&gt; -
  Fix tags search and hint while adding tags to test cases in TP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/180"&gt;PR #180&lt;/a&gt; -
  Build Nitrate as docker image&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/174"&gt;Issue #174&lt;/a&gt; -
  Error when remove tag from a plan's case&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/181"&gt;Issue #181&lt;/a&gt; -
  Failed to delete testplan or product&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/186"&gt;Issue #186&lt;/a&gt; -
  Errata field visible when &lt;code&gt;ERRATA_URL_PREFIX&lt;/code&gt; is empty&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using Nitrate as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm nitrate_web_1 nitrate_db_1
docker-compose up -d
docker exec -it nitrate_web_1 /Nitrate/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/Nitrate/blob/version_3.8.18/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate bug-fix and enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/05/01/nitrate-bug-fix-and-enhancement-update/" rel="alternate"></link><published>2017-05-01T15:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-05-01:blog/mr-senko/2017/05/01/nitrate-bug-fix-and-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.18
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-05-01
&lt;strong&gt;Severity:&lt;/strong&gt; High
&lt;strong&gt;URL:&lt;/strong&gt; &lt;a href="http://MrSenko.com/nitrate/"&gt;http://MrSenko.com/nitrate/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package and Docker image are now available which fix several bugs
and introduce big improvements related to using external bug trackers with Nitrate!
Further improvements related to bugtracker integration will be available in the
next release.&lt;/p&gt;
&lt;h2&gt;Changes since 3.8.18.17&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto a2363f8 from upstream&lt;/li&gt;
&lt;li&gt;Add default permissions to groups.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/191"&gt;PR #191&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/186"&gt;Issue #186&lt;/a&gt;:
  Errata field visible when &lt;code&gt;ERRATA_URL_PREFIX&lt;/code&gt; is empty.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/188"&gt;PR #188&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/181"&gt;Issue #181&lt;/a&gt;:
  Failed to delete testplan or product.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/182"&gt;PR #182&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Add link to Administration guide in footer (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update MOTD displayed on login/registration form (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Updated RPMs inside Docker image (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use bug trackers defined in the DB.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/79"&gt;PR #79&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this release introduces new database migrations so don't forget to
execute &lt;code&gt;./manage.py migrate&lt;/code&gt;!&lt;/p&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/79"&gt;PR #79&lt;/a&gt; -
  Use bug trackers defined in the DB&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/172"&gt;PR #172&lt;/a&gt; -
  Refactor sql in testplans&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/177"&gt;PR #177&lt;/a&gt; -
  Refactor SQL in testcases and fix #174&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/178"&gt;PR #178&lt;/a&gt; -
  Fix tags search and hint while adding tags to test cases in TP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/180"&gt;PR #180&lt;/a&gt; -
  Build Nitrate as docker image&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/174"&gt;Issue #174&lt;/a&gt; -
  Error when remove tag from a plan's case&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/181"&gt;Issue #181&lt;/a&gt; -
  Failed to delete testplan or product&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/186"&gt;Issue #186&lt;/a&gt; -
  Errata field visible when &lt;code&gt;ERRATA_URL_PREFIX&lt;/code&gt; is empty&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using Nitrate as a Docker container then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker rm nitrate_web_1 nitrate_db_1
docker-compose up -d
docker exec -it nitrate_web_1 /Nitrate/manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; you will need the appropriate version of
&lt;a href="https://github.com/MrSenko/Nitrate/blob/version_3.8.18/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;
for the above commands to work!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate bug-fix and enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/04/24/nitrate-bug-fix-and-enhancement-update/" rel="alternate"></link><published>2017-04-24T13:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-04-24:blog/mr-senko/2017/04/24/nitrate-bug-fix-and-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.17
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-04-24
&lt;strong&gt;Severity:&lt;/strong&gt; Medium
&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href="http://nitrate-mrsenko.rtfd.io/"&gt;http://nitrate-mrsenko.rtfd.io/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which introduces several fixes and
improvements. It is also possible to build and run Nitrate as a Docker image.
Further improvements for running in dockerized environment will be available
in the next release.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.15&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto a1c47ec from upstream&lt;/li&gt;
&lt;li&gt;Refactor SQL in testplans to ORM.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/172"&gt;PR #172&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Fix &lt;a href="https://github.com/Nitrate/Nitrate/issues/174"&gt;Issue #174&lt;/a&gt; -
  Error when remove tag from a plan's cases (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Refactor SQL in testcases to ORM.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/177"&gt;PR #177&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Improve tags search and fix hints while adding tags to selected test cases
  inside of a test plan. &lt;a href="https://github.com/Nitrate/Nitrate/pull/178"&gt;PR #178&lt;/a&gt;
  (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update documentation about installation steps for RHEL6.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/179"&gt;PR #179&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Make it possible to build and run Nitrate as Docker image.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/180"&gt;PR #180&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/172"&gt;PR #172&lt;/a&gt; -
  Refactor sql in testplans&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/177"&gt;PR #177&lt;/a&gt; -
  Refactor SQL in testcases and fix #174&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/178"&gt;PR #178&lt;/a&gt; -
  Fix tags search and hint while adding tags to test cases in TP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/179"&gt;PR #179&lt;/a&gt; -
  Update installation steps for RHEL6&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/180"&gt;PR #180&lt;/a&gt; -
  Build Nitrate as docker image&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/174"&gt;Issue #174&lt;/a&gt; -
  Error when remove tag from a plan's case&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate bug-fix and enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/04/24/nitrate-bug-fix-and-enhancement-update/" rel="alternate"></link><published>2017-04-24T13:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-04-24:blog/mr-senko/2017/04/24/nitrate-bug-fix-and-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.17
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-04-24
&lt;strong&gt;Severity:&lt;/strong&gt; Medium
&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href="http://nitrate-mrsenko.rtfd.io/"&gt;http://nitrate-mrsenko.rtfd.io/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which introduces several fixes and
improvements. It is also possible to build and run Nitrate as a Docker image.
Further improvements for running in dockerized environment will be available
in the next release.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.15&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto a1c47ec from upstream&lt;/li&gt;
&lt;li&gt;Refactor SQL in testplans to ORM.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/172"&gt;PR #172&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Fix &lt;a href="https://github.com/Nitrate/Nitrate/issues/174"&gt;Issue #174&lt;/a&gt; -
  Error when remove tag from a plan's cases (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Refactor SQL in testcases to ORM.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/177"&gt;PR #177&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Improve tags search and fix hints while adding tags to selected test cases
  inside of a test plan. &lt;a href="https://github.com/Nitrate/Nitrate/pull/178"&gt;PR #178&lt;/a&gt;
  (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update documentation about installation steps for RHEL6.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/179"&gt;PR #179&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Make it possible to build and run Nitrate as Docker image.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/180"&gt;PR #180&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/172"&gt;PR #172&lt;/a&gt; -
  Refactor sql in testplans&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/177"&gt;PR #177&lt;/a&gt; -
  Refactor SQL in testcases and fix #174&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/178"&gt;PR #178&lt;/a&gt; -
  Fix tags search and hint while adding tags to test cases in TP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/179"&gt;PR #179&lt;/a&gt; -
  Update installation steps for RHEL6&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/180"&gt;PR #180&lt;/a&gt; -
  Build Nitrate as docker image&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/174"&gt;Issue #174&lt;/a&gt; -
  Error when remove tag from a plan's case&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate bug-fix and enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/04/24/nitrate-bug-fix-and-enhancement-update/" rel="alternate"></link><published>2017-04-24T13:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-04-24:blog/mr-senko/2017/04/24/nitrate-bug-fix-and-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.17
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-04-24
&lt;strong&gt;Severity:&lt;/strong&gt; Medium
&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href="http://nitrate-mrsenko.rtfd.io/"&gt;http://nitrate-mrsenko.rtfd.io/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which introduces several fixes and
improvements. It is also possible to build and run Nitrate as a Docker image.
Further improvements for running in dockerized environment will be available
in the next release.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.15&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto a1c47ec from upstream&lt;/li&gt;
&lt;li&gt;Refactor SQL in testplans to ORM.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/172"&gt;PR #172&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Fix &lt;a href="https://github.com/Nitrate/Nitrate/issues/174"&gt;Issue #174&lt;/a&gt; -
  Error when remove tag from a plan's cases (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Refactor SQL in testcases to ORM.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/177"&gt;PR #177&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Improve tags search and fix hints while adding tags to selected test cases
  inside of a test plan. &lt;a href="https://github.com/Nitrate/Nitrate/pull/178"&gt;PR #178&lt;/a&gt;
  (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update documentation about installation steps for RHEL6.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/179"&gt;PR #179&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Make it possible to build and run Nitrate as Docker image.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/180"&gt;PR #180&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/172"&gt;PR #172&lt;/a&gt; -
  Refactor sql in testplans&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/177"&gt;PR #177&lt;/a&gt; -
  Refactor SQL in testcases and fix #174&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/178"&gt;PR #178&lt;/a&gt; -
  Fix tags search and hint while adding tags to test cases in TP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/179"&gt;PR #179&lt;/a&gt; -
  Update installation steps for RHEL6&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/180"&gt;PR #180&lt;/a&gt; -
  Build Nitrate as docker image&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/174"&gt;Issue #174&lt;/a&gt; -
  Error when remove tag from a plan's case&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/04/12/nitrate-enhancement-update/" rel="alternate"></link><published>2017-04-12T23:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-04-12:blog/mr-senko/2017/04/12/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.15
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-04-12
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which removes one database migration.
&lt;code&gt;tcms.core.migrations.0001_django_comments__object_pk&lt;/code&gt; is modifying a 3rd party
model and Django gets really confused about this! See the discussion in
&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; about why we've decided
to drop the migration!&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.12&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 8f45beb from upstream&lt;/li&gt;
&lt;li&gt;Remove tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/04/12/nitrate-enhancement-update/" rel="alternate"></link><published>2017-04-12T23:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-04-12:blog/mr-senko/2017/04/12/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.15
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-04-12
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which removes one database migration.
&lt;code&gt;tcms.core.migrations.0001_django_comments__object_pk&lt;/code&gt; is modifying a 3rd party
model and Django gets really confused about this! See the discussion in
&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; about why we've decided
to drop the migration!&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.12&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 8f45beb from upstream&lt;/li&gt;
&lt;li&gt;Remove tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/04/12/nitrate-enhancement-update/" rel="alternate"></link><published>2017-04-12T23:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-04-12:blog/mr-senko/2017/04/12/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.15
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-04-12
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which removes one database migration.
&lt;code&gt;tcms.core.migrations.0001_django_comments__object_pk&lt;/code&gt; is modifying a 3rd party
model and Django gets really confused about this! See the discussion in
&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; about why we've decided
to drop the migration!&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.12&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 8f45beb from upstream&lt;/li&gt;
&lt;li&gt;Remove tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/04/12/nitrate-enhancement-update/" rel="alternate"></link><published>2017-04-12T23:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-04-12:blog/mr-senko/2017/04/12/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.15
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-04-12
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which removes one database migration.
&lt;code&gt;tcms.core.migrations.0001_django_comments__object_pk&lt;/code&gt; is modifying a 3rd party
model and Django gets really confused about this! See the discussion in
&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; about why we've decided
to drop the migration!&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.12&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 8f45beb from upstream&lt;/li&gt;
&lt;li&gt;Remove tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/04/12/nitrate-enhancement-update/" rel="alternate"></link><published>2017-04-12T23:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-04-12:blog/mr-senko/2017/04/12/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.15
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-04-12
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which removes one database migration.
&lt;code&gt;tcms.core.migrations.0001_django_comments__object_pk&lt;/code&gt; is modifying a 3rd party
model and Django gets really confused about this! See the discussion in
&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; about why we've decided
to drop the migration!&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.12&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 8f45beb from upstream&lt;/li&gt;
&lt;li&gt;Remove tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/04/12/nitrate-enhancement-update/" rel="alternate"></link><published>2017-04-12T23:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-04-12:blog/mr-senko/2017/04/12/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.15
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-04-12
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which removes one database migration.
&lt;code&gt;tcms.core.migrations.0001_django_comments__object_pk&lt;/code&gt; is modifying a 3rd party
model and Django gets really confused about this! See the discussion in
&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; about why we've decided
to drop the migration!&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.12&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 8f45beb from upstream&lt;/li&gt;
&lt;li&gt;Remove tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/04/12/nitrate-enhancement-update/" rel="alternate"></link><published>2017-04-12T23:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-04-12:blog/mr-senko/2017/04/12/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.15
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-04-12
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which removes one database migration.
&lt;code&gt;tcms.core.migrations.0001_django_comments__object_pk&lt;/code&gt; is modifying a 3rd party
model and Django gets really confused about this! See the discussion in
&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; about why we've decided
to drop the migration!&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.12&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 8f45beb from upstream&lt;/li&gt;
&lt;li&gt;Remove tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>django-chartit enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/22/django-chartit-enhancement-update/" rel="alternate"></link><published>2017-03-22T11:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-22:blog/mr-senko/2017/03/22/django-chartit-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; django-chartit-master
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-22
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Django Chartit is a Django app that can be used to easily create charts from
the data in your database. The charts are rendered using &lt;code&gt;Highcharts&lt;/code&gt; and
&lt;code&gt;jQuery&lt;/code&gt; JavaScript libraries. Data in your database can be plotted as simple
line charts, column charts, area charts, scatter plots, and many more chart
types. Data can also be plotted as Pivot Charts where the data is grouped
and/or pivoted by specific column(s).&lt;/p&gt;
&lt;p&gt;Updated upstream is now available which adds couple of improvements.&lt;/p&gt;
&lt;h2&gt;Upstream changelog since 0.2.9&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Update demo with an example of how to pass &lt;code&gt;legendIndex&lt;/code&gt; as an option
  to a data serie. Closes
  &lt;a href="https://github.com/chartit/django-chartit/issues/48"&gt;Issue #48&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Update demo with an example of how to change the label of any term instead
  of using the default one. Closes
  &lt;a href="https://github.com/chartit/django-chartit/issues/46"&gt;Issue #46&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;This is an upstream release only. No updated packages are provided via private
repositories on Mr. Senko!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/22/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-22T11:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-22:blog/mr-senko/2017/03/22/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.12
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-22
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which adds various enhancements and
reduces technical debth. The main focus of this release is code refactoring,
improved test coverage and enabling testing against multiple database backends.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 980b07b from upstream&lt;/li&gt;
&lt;li&gt;Add tests, SQL refactor and fixes for commit_unless_managed.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/170"&gt;PR #170&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/148"&gt;Issue #148&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable testing with MySQL, MariaDB and Postgres on Travis-CI.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; -
  Refactor tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/22/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-22T11:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-22:blog/mr-senko/2017/03/22/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.12
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-22
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which adds various enhancements and
reduces technical debth. The main focus of this release is code refactoring,
improved test coverage and enabling testing against multiple database backends.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 980b07b from upstream&lt;/li&gt;
&lt;li&gt;Add tests, SQL refactor and fixes for commit_unless_managed.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/170"&gt;PR #170&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/148"&gt;Issue #148&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable testing with MySQL, MariaDB and Postgres on Travis-CI.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; -
  Refactor tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/22/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-22T11:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-22:blog/mr-senko/2017/03/22/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.12
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-22
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which adds various enhancements and
reduces technical debth. The main focus of this release is code refactoring,
improved test coverage and enabling testing against multiple database backends.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 980b07b from upstream&lt;/li&gt;
&lt;li&gt;Add tests, SQL refactor and fixes for commit_unless_managed.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/170"&gt;PR #170&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/148"&gt;Issue #148&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable testing with MySQL, MariaDB and Postgres on Travis-CI.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; -
  Refactor tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/22/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-22T11:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-22:blog/mr-senko/2017/03/22/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.12
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-22
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which adds various enhancements and
reduces technical debth. The main focus of this release is code refactoring,
improved test coverage and enabling testing against multiple database backends.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 980b07b from upstream&lt;/li&gt;
&lt;li&gt;Add tests, SQL refactor and fixes for commit_unless_managed.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/170"&gt;PR #170&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/148"&gt;Issue #148&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable testing with MySQL, MariaDB and Postgres on Travis-CI.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; -
  Refactor tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/22/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-22T11:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-22:blog/mr-senko/2017/03/22/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.12
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-22
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which adds various enhancements and
reduces technical debth. The main focus of this release is code refactoring,
improved test coverage and enabling testing against multiple database backends.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 980b07b from upstream&lt;/li&gt;
&lt;li&gt;Add tests, SQL refactor and fixes for commit_unless_managed.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/170"&gt;PR #170&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/148"&gt;Issue #148&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable testing with MySQL, MariaDB and Postgres on Travis-CI.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; -
  Refactor tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/22/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-22T11:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-22:blog/mr-senko/2017/03/22/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.12
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-22
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which adds various enhancements and
reduces technical debth. The main focus of this release is code refactoring,
improved test coverage and enabling testing against multiple database backends.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 980b07b from upstream&lt;/li&gt;
&lt;li&gt;Add tests, SQL refactor and fixes for commit_unless_managed.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/170"&gt;PR #170&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/148"&gt;Issue #148&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable testing with MySQL, MariaDB and Postgres on Travis-CI.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; -
  Refactor tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/22/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-22T11:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-22:blog/mr-senko/2017/03/22/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.12
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-22
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which adds various enhancements and
reduces technical debth. The main focus of this release is code refactoring,
improved test coverage and enabling testing against multiple database backends.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 980b07b from upstream&lt;/li&gt;
&lt;li&gt;Add tests, SQL refactor and fixes for commit_unless_managed.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/170"&gt;PR #170&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/148"&gt;Issue #148&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable testing with MySQL, MariaDB and Postgres on Travis-CI.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open upstream issues&lt;/h2&gt;
&lt;p&gt;The following issues and pull requests, which have been previously released on
Mr. Senko, are still open in the upstream repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt; -
  fix: showing priorities in advanced search in hardcode (RhBug:1139932) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; -
  Refactor SQL and use ORM queries instead &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt; -
  Replace SQL with ORM in reporting app. Fix #127&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; -
  Don't use deprecated request.REQUEST&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; -
  Refactor tcms.core.migrations.0001_django_comments__object_pk&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/pull/171"&gt;PR #171&lt;/a&gt; -
  Enable testing with MySQL and Postgres on Travis-CI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;Issue #127&lt;/a&gt; -
  Make SQL statements be compatible with PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitrate/Nitrate/issues/169"&gt;Issue #169&lt;/a&gt; -
  Add MySQL, MariaDB and PostgreSQL to Travis CI test matrix &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/08/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-08T10:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-08:blog/mr-senko/2017/03/08/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.10
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-08
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which fixes several bugs and
adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.09&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto c696e62 from upstream&lt;/li&gt;
&lt;li&gt;Don't use deprecated &lt;code&gt;request.REQUEST&lt;/code&gt;.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update tests and fix Travis CI core dump.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/168"&gt;PR #168&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/161"&gt;Issue #161&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/08/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-08T10:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-08:blog/mr-senko/2017/03/08/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.10
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-08
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which fixes several bugs and
adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.09&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto c696e62 from upstream&lt;/li&gt;
&lt;li&gt;Don't use deprecated &lt;code&gt;request.REQUEST&lt;/code&gt;.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update tests and fix Travis CI core dump.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/168"&gt;PR #168&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/161"&gt;Issue #161&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/08/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-08T10:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-08:blog/mr-senko/2017/03/08/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.10
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-08
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which fixes several bugs and
adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.09&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto c696e62 from upstream&lt;/li&gt;
&lt;li&gt;Don't use deprecated &lt;code&gt;request.REQUEST&lt;/code&gt;.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update tests and fix Travis CI core dump.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/168"&gt;PR #168&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/161"&gt;Issue #161&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/08/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-08T10:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-08:blog/mr-senko/2017/03/08/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.10
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-08
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which fixes several bugs and
adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.09&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto c696e62 from upstream&lt;/li&gt;
&lt;li&gt;Don't use deprecated &lt;code&gt;request.REQUEST&lt;/code&gt;.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update tests and fix Travis CI core dump.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/168"&gt;PR #168&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/161"&gt;Issue #161&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/08/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-08T10:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-08:blog/mr-senko/2017/03/08/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.10
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-08
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which fixes several bugs and
adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.09&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto c696e62 from upstream&lt;/li&gt;
&lt;li&gt;Don't use deprecated &lt;code&gt;request.REQUEST&lt;/code&gt;.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update tests and fix Travis CI core dump.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/168"&gt;PR #168&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/161"&gt;Issue #161&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/08/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-08T10:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-08:blog/mr-senko/2017/03/08/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.10
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-08
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which fixes several bugs and
adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.09&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto c696e62 from upstream&lt;/li&gt;
&lt;li&gt;Don't use deprecated &lt;code&gt;request.REQUEST&lt;/code&gt;.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update tests and fix Travis CI core dump.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/168"&gt;PR #168&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/161"&gt;Issue #161&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/03/08/nitrate-enhancement-update/" rel="alternate"></link><published>2017-03-08T10:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-03-08:blog/mr-senko/2017/03/08/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.10
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-03-08
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which fixes several bugs and
adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.09&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto c696e62 from upstream&lt;/li&gt;
&lt;li&gt;Don't use deprecated &lt;code&gt;request.REQUEST&lt;/code&gt;.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/156"&gt;PR #156&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update tests and fix Travis CI core dump.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/168"&gt;PR #168&lt;/a&gt;,
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/161"&gt;Issue #161&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate bug-fix &amp; enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/28/nitrate-bug-fix-enhancement-update/" rel="alternate"></link><published>2017-02-28T15:00:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-28:blog/mr-senko/2017/02/28/nitrate-bug-fix-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.09
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-28
&lt;strong&gt;Severity:&lt;/strong&gt; High&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available which fixes several bugs and
adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.08&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 7a6bc34 from upstream&lt;/li&gt;
&lt;li&gt;Enable the test suite. Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/113"&gt;Issue #113&lt;/a&gt; (Chenxiong Qi)&lt;/li&gt;
&lt;li&gt;Refactor tcms.core.migrations.0001_django_comments__object_pk.
  Fixes a bug where applied migration was shown as still pending.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/157"&gt;PR #157&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Refactor SQLs in xmlrpc (with tests).
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/159"&gt;PR #159&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable Coveralls.io.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/160"&gt;PR #160&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Don't install files under &lt;code&gt;/etc/&lt;/code&gt; to avoid SandboxViolation. Enables
  installation in virtualenv and as non-root. Hot-fix for
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/155"&gt;Issue #155&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --upgrade nitrate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/21/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-21T11:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-21:blog/mr-senko/2017/02/21/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.08
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-21
&lt;strong&gt;Severity:&lt;/strong&gt; High&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.07&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries inside the reporting
  module. This improves portability between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt;, fixes
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;issue #127&lt;/a&gt; (Mr. Senko).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/21/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-21T11:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-21:blog/mr-senko/2017/02/21/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.08
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-21
&lt;strong&gt;Severity:&lt;/strong&gt; High&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.07&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries inside the reporting
  module. This improves portability between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt;, fixes
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;issue #127&lt;/a&gt; (Mr. Senko).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/21/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-21T11:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-21:blog/mr-senko/2017/02/21/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.08
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-21
&lt;strong&gt;Severity:&lt;/strong&gt; High&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.07&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries inside the reporting
  module. This improves portability between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt;, fixes
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;issue #127&lt;/a&gt; (Mr. Senko).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/21/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-21T11:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-21:blog/mr-senko/2017/02/21/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.08
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-21
&lt;strong&gt;Severity:&lt;/strong&gt; High&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.07&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries inside the reporting
  module. This improves portability between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt;, fixes
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;issue #127&lt;/a&gt; (Mr. Senko).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/21/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-21T11:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-21:blog/mr-senko/2017/02/21/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.08
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-21
&lt;strong&gt;Severity:&lt;/strong&gt; High&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.07&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries inside the reporting
  module. This improves portability between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt;, fixes
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;issue #127&lt;/a&gt; (Mr. Senko).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/21/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-21T11:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-21:blog/mr-senko/2017/02/21/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.08
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-21
&lt;strong&gt;Severity:&lt;/strong&gt; High&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.07&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries inside the reporting
  module. This improves portability between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt;, fixes
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;issue #127&lt;/a&gt; (Mr. Senko).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/21/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-21T11:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-21:blog/mr-senko/2017/02/21/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.08
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-21
&lt;strong&gt;Severity:&lt;/strong&gt; High&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.07&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries inside the reporting
  module. This improves portability between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/146"&gt;PR #146&lt;/a&gt;, fixes
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/127"&gt;issue #127&lt;/a&gt; (Mr. Senko).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/14/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-14T10:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-14:blog/mr-senko/2017/02/14/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.07
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-14
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.05&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 82625f1 from upstream&lt;/li&gt;
&lt;li&gt;Add documentation about installation with Apache and virtualenv.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/137"&gt;PR #137&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries. Improves portability
  between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use version from module, not txt file. Version is now shown in
  Nitrate footer.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/145"&gt;PR #145&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/14/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-14T10:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-14:blog/mr-senko/2017/02/14/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.07
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-14
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.05&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 82625f1 from upstream&lt;/li&gt;
&lt;li&gt;Add documentation about installation with Apache and virtualenv.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/137"&gt;PR #137&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries. Improves portability
  between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use version from module, not txt file. Version is now shown in
  Nitrate footer.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/145"&gt;PR #145&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/14/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-14T10:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-14:blog/mr-senko/2017/02/14/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.07
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-14
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.05&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 82625f1 from upstream&lt;/li&gt;
&lt;li&gt;Add documentation about installation with Apache and virtualenv.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/137"&gt;PR #137&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries. Improves portability
  between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use version from module, not txt file. Version is now shown in
  Nitrate footer.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/145"&gt;PR #145&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/14/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-14T10:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-14:blog/mr-senko/2017/02/14/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.07
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-14
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.05&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 82625f1 from upstream&lt;/li&gt;
&lt;li&gt;Add documentation about installation with Apache and virtualenv.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/137"&gt;PR #137&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries. Improves portability
  between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use version from module, not txt file. Version is now shown in
  Nitrate footer.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/145"&gt;PR #145&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/14/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-14T10:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-14:blog/mr-senko/2017/02/14/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.07
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-14
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.05&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 82625f1 from upstream&lt;/li&gt;
&lt;li&gt;Add documentation about installation with Apache and virtualenv.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/137"&gt;PR #137&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries. Improves portability
  between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use version from module, not txt file. Version is now shown in
  Nitrate footer.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/145"&gt;PR #145&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/14/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-14T10:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-14:blog/mr-senko/2017/02/14/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.07
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-14
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.05&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 82625f1 from upstream&lt;/li&gt;
&lt;li&gt;Add documentation about installation with Apache and virtualenv.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/137"&gt;PR #137&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries. Improves portability
  between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use version from module, not txt file. Version is now shown in
  Nitrate footer.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/145"&gt;PR #145&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/02/14/nitrate-enhancement-update/" rel="alternate"></link><published>2017-02-14T10:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-02-14:blog/mr-senko/2017/02/14/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.07
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-02-14
&lt;strong&gt;Severity:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.05&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 82625f1 from upstream&lt;/li&gt;
&lt;li&gt;Add documentation about installation with Apache and virtualenv.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/137"&gt;PR #137&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Replace hard-coded SQL statements with ORM queries. Improves portability
  between database backends.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/139"&gt;PR #139&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Use version from module, not txt file. Version is now shown in
  Nitrate footer.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/145"&gt;PR #145&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/31/nitrate-enhancement-update/" rel="alternate"></link><published>2017-01-31T09:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-31:blog/mr-senko/2017/01/31/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.05
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-01-31
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.04&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 698288e from upstream (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable internal tests&lt;/li&gt;
&lt;li&gt;Drop support for Python 2.6 (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update help strings of clone case form and update docs. Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/67"&gt;#67&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Updated documentation with sections about hosting with
  Gunicorn, Docker and Google Cloud Engine (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Django migrations improvements&lt;/li&gt;
&lt;li&gt;Upgrade Django to 1.8.14&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/31/nitrate-enhancement-update/" rel="alternate"></link><published>2017-01-31T09:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-31:blog/mr-senko/2017/01/31/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.05
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-01-31
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.04&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 698288e from upstream (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable internal tests&lt;/li&gt;
&lt;li&gt;Drop support for Python 2.6 (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update help strings of clone case form and update docs. Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/67"&gt;#67&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Updated documentation with sections about hosting with
  Gunicorn, Docker and Google Cloud Engine (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Django migrations improvements&lt;/li&gt;
&lt;li&gt;Upgrade Django to 1.8.14&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/31/nitrate-enhancement-update/" rel="alternate"></link><published>2017-01-31T09:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-31:blog/mr-senko/2017/01/31/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.05
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-01-31
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.04&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 698288e from upstream (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable internal tests&lt;/li&gt;
&lt;li&gt;Drop support for Python 2.6 (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update help strings of clone case form and update docs. Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/67"&gt;#67&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Updated documentation with sections about hosting with
  Gunicorn, Docker and Google Cloud Engine (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Django migrations improvements&lt;/li&gt;
&lt;li&gt;Upgrade Django to 1.8.14&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/31/nitrate-enhancement-update/" rel="alternate"></link><published>2017-01-31T09:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-31:blog/mr-senko/2017/01/31/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.05
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-01-31
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.04&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 698288e from upstream (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable internal tests&lt;/li&gt;
&lt;li&gt;Drop support for Python 2.6 (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update help strings of clone case form and update docs. Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/67"&gt;#67&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Updated documentation with sections about hosting with
  Gunicorn, Docker and Google Cloud Engine (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Django migrations improvements&lt;/li&gt;
&lt;li&gt;Upgrade Django to 1.8.14&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/31/nitrate-enhancement-update/" rel="alternate"></link><published>2017-01-31T09:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-31:blog/mr-senko/2017/01/31/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.05
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-01-31
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.04&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 698288e from upstream (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable internal tests&lt;/li&gt;
&lt;li&gt;Drop support for Python 2.6 (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update help strings of clone case form and update docs. Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/67"&gt;#67&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Updated documentation with sections about hosting with
  Gunicorn, Docker and Google Cloud Engine (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Django migrations improvements&lt;/li&gt;
&lt;li&gt;Upgrade Django to 1.8.14&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/31/nitrate-enhancement-update/" rel="alternate"></link><published>2017-01-31T09:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-31:blog/mr-senko/2017/01/31/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.05
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-01-31
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.04&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 698288e from upstream (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable internal tests&lt;/li&gt;
&lt;li&gt;Drop support for Python 2.6 (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update help strings of clone case form and update docs. Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/67"&gt;#67&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Updated documentation with sections about hosting with
  Gunicorn, Docker and Google Cloud Engine (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Django migrations improvements&lt;/li&gt;
&lt;li&gt;Upgrade Django to 1.8.14&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/31/nitrate-enhancement-update/" rel="alternate"></link><published>2017-01-31T09:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-31:blog/mr-senko/2017/01/31/nitrate-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.05
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-01-31
&lt;strong&gt;Severity:&lt;/strong&gt; Low&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements.&lt;/p&gt;
&lt;h2&gt;Changelog since 3.8.18.04&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebased onto 698288e from upstream (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Enable internal tests&lt;/li&gt;
&lt;li&gt;Drop support for Python 2.6 (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update help strings of clone case form and update docs. Fix
  &lt;a href="https://github.com/Nitrate/Nitrate/issues/67"&gt;#67&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Updated documentation with sections about hosting with
  Gunicorn, Docker and Google Cloud Engine (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Django migrations improvements&lt;/li&gt;
&lt;li&gt;Upgrade Django to 1.8.14&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate bug fix and enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/24/nitrate-bug-fix-and-enhancement-update/" rel="alternate"></link><published>2017-01-24T09:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-24:blog/mr-senko/2017/01/24/nitrate-bug-fix-and-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.04
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-01-24&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements and
bug fixes.&lt;/p&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Don't hard-code priorities in advanced search.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt;,
  fixes &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1139932"&gt;RhBz #1139932&lt;/a&gt; (Chenxiong Qi)&lt;/li&gt;
&lt;li&gt;Update to Django 1.8.11. &lt;a href="https://github.com/Nitrate/Nitrate/pull/81"&gt;PR #81&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update django-tinymce to 2.4.0&lt;/li&gt;
&lt;li&gt;Minor updates to documentation.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/100"&gt;PR #100&lt;/a&gt; (Matthias Cavigelli)&lt;/li&gt;
&lt;li&gt;Update link to wadofstuff-django-serializers.
  PR &lt;a href="https://github.com/Nitrate/Nitrate/pull/101"&gt;#101&lt;/a&gt;,
  fixes &lt;a href="https://github.com/Nitrate/Nitrate/issues/99"&gt;#99&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Require Celery&amp;lt;2 for compatibility reasons.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/102"&gt;PR #102&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Host static files in DEBUG mode for development.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/103"&gt;PR #103&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;flake8 fixes. &lt;a href="https://github.com/Nitrate/Nitrate/pull/104"&gt;PR #104&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate bug fix and enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/24/nitrate-bug-fix-and-enhancement-update/" rel="alternate"></link><published>2017-01-24T09:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-24:blog/mr-senko/2017/01/24/nitrate-bug-fix-and-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.04
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-01-24&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements and
bug fixes.&lt;/p&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Don't hard-code priorities in advanced search.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt;,
  fixes &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1139932"&gt;RhBz #1139932&lt;/a&gt; (Chenxiong Qi)&lt;/li&gt;
&lt;li&gt;Update to Django 1.8.11. &lt;a href="https://github.com/Nitrate/Nitrate/pull/81"&gt;PR #81&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update django-tinymce to 2.4.0&lt;/li&gt;
&lt;li&gt;Minor updates to documentation.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/100"&gt;PR #100&lt;/a&gt; (Matthias Cavigelli)&lt;/li&gt;
&lt;li&gt;Update link to wadofstuff-django-serializers.
  PR &lt;a href="https://github.com/Nitrate/Nitrate/pull/101"&gt;#101&lt;/a&gt;,
  fixes &lt;a href="https://github.com/Nitrate/Nitrate/issues/99"&gt;#99&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Require Celery&amp;lt;2 for compatibility reasons.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/102"&gt;PR #102&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Host static files in DEBUG mode for development.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/103"&gt;PR #103&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;flake8 fixes. &lt;a href="https://github.com/Nitrate/Nitrate/pull/104"&gt;PR #104&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Nitrate bug fix and enhancement update</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/24/nitrate-bug-fix-and-enhancement-update/" rel="alternate"></link><published>2017-01-24T09:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-24:blog/mr-senko/2017/01/24/nitrate-bug-fix-and-enhancement-update/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; nitrate-3.8.18.04
&lt;strong&gt;Released on:&lt;/strong&gt; 2017-01-24&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;Nitrate is an open source test plan, test run and test case management system.
It has a lot of great features, such as
Bugzilla and JIRA integration, QPID integration, fast test plan and runs search,
powerful access control for each plan, run and case, and XMLRPC APIs.&lt;/p&gt;
&lt;p&gt;Updated Nitrate package is now available that adds various enhancements and
bug fixes.&lt;/p&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Don't hard-code priorities in advanced search.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/45"&gt;PR #45&lt;/a&gt;,
  fixes &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1139932"&gt;RhBz #1139932&lt;/a&gt; (Chenxiong Qi)&lt;/li&gt;
&lt;li&gt;Update to Django 1.8.11. &lt;a href="https://github.com/Nitrate/Nitrate/pull/81"&gt;PR #81&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Update django-tinymce to 2.4.0&lt;/li&gt;
&lt;li&gt;Minor updates to documentation.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/100"&gt;PR #100&lt;/a&gt; (Matthias Cavigelli)&lt;/li&gt;
&lt;li&gt;Update link to wadofstuff-django-serializers.
  PR &lt;a href="https://github.com/Nitrate/Nitrate/pull/101"&gt;#101&lt;/a&gt;,
  fixes &lt;a href="https://github.com/Nitrate/Nitrate/issues/99"&gt;#99&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Require Celery&amp;lt;2 for compatibility reasons.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/102"&gt;PR #102&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;Host static files in DEBUG mode for development.
  &lt;a href="https://github.com/Nitrate/Nitrate/pull/103"&gt;PR #103&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;li&gt;flake8 fixes. &lt;a href="https://github.com/Nitrate/Nitrate/pull/104"&gt;PR #104&lt;/a&gt; (Mr. Senko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt; and
&lt;a href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/"&gt;configure your private PyPI repositories&lt;/a&gt;
before upgrading!&lt;/p&gt;</summary><category term="Python"></category><category term="errata"></category></entry><entry><title>Using private PyPI repositories</title><link href="http://mrsenko.com/blog/mr-senko/2017/01/22/using-private-pypi-repositories/" rel="alternate"></link><published>2017-01-22T12:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2017-01-22:blog/mr-senko/2017/01/22/using-private-pypi-repositories/</id><summary type="html">&lt;p&gt;Once you have subscribed to Mr. Senko you will receive a repository URL from
which to install package versions supported by Mr. Senko. The URL is of the form
&lt;strong&gt;https://d1v12p11qcbqzw.cloudfront.net/YOUR-CUSTOMER-ID&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You must keep this URL secret! You can install supported packaged by either command line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install kiwitestpad --extra-index-url https://d1v12p11qcbqzw.cloudfront.net/YOUR-CUSTOMER-ID
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or inside of your project by adding the following statement to &lt;code&gt;requirements.txt&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;--extra-index-url https://d1v12p11qcbqzw.cloudfront.net/YOUR-CUSTOMER-ID
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can also configure your &lt;code&gt;~/.pip/pip.conf&lt;/code&gt; file to look like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[global]&lt;/span&gt;
&lt;span class="c1"&gt;; Extra index from Mr. Senko&lt;/span&gt;
&lt;span class="na"&gt;extra-index-url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;https://d1v12p11qcbqzw.cloudfront.net/YOUR-CUSTOMER-ID&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Another possibility is to configure the private repository URL directly into &lt;code&gt;setup.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;YourAppName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;strazar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;dependency_links&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;https://d1v12p11qcbqzw.cloudfront.net/YOUR-CUSTOMER-ID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And you're ready to seamlessly pip install private packages from Mr. Senko.&lt;/p&gt;
&lt;h2&gt;What is Mr. Senko?&lt;/h2&gt;
&lt;p&gt;Mr. Senko provides long term support for various open source libraries. We do
bug fixes and feature development, improve testing and write documentation so
you don't have to!
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;Subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt;
if you need faster response cycle for the open source components which you use.&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>What I've worked on in December 2016</title><link href="http://mrsenko.com/blog/atodorov/2016/12/30/what-ive-worked-on-in-december-2016/" rel="alternate"></link><published>2016-12-30T10:30:00+02:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-12-30:blog/atodorov/2016/12/30/what-ive-worked-on-in-december-2016/</id><summary type="html">&lt;p&gt;Hello everyone, during December I've been working on several
different projects from our supported
&lt;a href="http://mrsenko.com/support/python.html"&gt;Python software stack&lt;/a&gt;
and also ventured into Ruby land.&lt;/p&gt;
&lt;h2&gt;Versions 0.2.3 and 0.2.4 of pelican-ab&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;pelican-ab&lt;/em&gt; is an A/B testing plugin for Pelican, the static site
generator for Python. It allows you to encode experiments in your
templates and renders the experiment selected by the &lt;code&gt;AB_EXPERIMENT&lt;/code&gt;
environment variable.&lt;/p&gt;
&lt;p&gt;There were two versions released in December 2016 making it compatible
with the newly released &lt;em&gt;Pelican 3.7.0&lt;/em&gt;, adding more tests and fixing some
minor bugs.&lt;/p&gt;
&lt;h2&gt;Version 0.2.8 of django-chartit&lt;/h2&gt;
&lt;p&gt;I have worked on a new version for django-chartit which adds support for
&lt;a href="http://mrsenko.com/blog/mr-senko/2016/12/13/using-model-properties-and-raw-sql-with-django-chartit/"&gt;model properties and raw SQL queries in charts&lt;/a&gt;.
I've also done internal work for further refactoring but without
anything concrete yet!&lt;/p&gt;
&lt;h2&gt;New extensions for pylint&lt;/h2&gt;
&lt;p&gt;I've worked on the new
&lt;a href="https://github.com/PyCQA/pylint/pull/1183"&gt;compare-to-empty-string&lt;/a&gt;
extension for pylint. Using this extension the following snippet&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;will be flagged as problematic because it can be written in a more natural way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The extension will be disabled by default because empty string may be
a valid value depending on the behavior of your program. I have also
created a similar extension to flag integer comparisons against zero,
see &lt;a href="https://github.com/PyCQA/pylint/pull/1243"&gt;pylint#1243&lt;/a&gt;.
While these may seem a bit extreme they are very useful to identify
code which can be refactored to reduce comparisons
when coupled with mutation testing!&lt;/p&gt;
&lt;h2&gt;New Rspec formatters&lt;/h2&gt;
&lt;p&gt;I've worked on two new formatters for Rspec:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MrSenko/rspec_numbered_documentation"&gt;rspec_numbered_documentation&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MrSenko/rspec_key_value"&gt;rspec_key_value&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both add simple syntactic sugar to how Rspec output can be formatted and make it
easier for debugging or sending off for further machine processing.&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt;
if you need faster response cycle for the open source libraries you use.&lt;/p&gt;</summary><category term="Python"></category><category term="Ruby"></category></entry><entry><title>Using model properties and raw SQL with django-chartit</title><link href="http://mrsenko.com/blog/mr-senko/2016/12/13/using-model-properties-and-raw-sql-with-django-chartit/" rel="alternate"></link><published>2016-12-13T15:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2016-12-13:blog/mr-senko/2016/12/13/using-model-properties-and-raw-sql-with-django-chartit/</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/chartit/django-chartit"&gt;django-chartit&lt;/a&gt; is a Django app
that can be used to easily create charts from the data in your database. The
charts are rendered using &lt;code&gt;Highcharts&lt;/code&gt; and &lt;code&gt;jQuery&lt;/code&gt; JavaScript libraries.
Data in your database can be plotted as simple line charts, column charts,
area charts, scatter plots, and many more chart types.&lt;/p&gt;
&lt;p&gt;Few days ago we have released version 0.2.8 which includes support for
model properties and raw SQL queries in your charts. This blog post will describe
how to use them.&lt;/p&gt;
&lt;h2&gt;Using model properties&lt;/h2&gt;
&lt;p&gt;Sometimes it is convenient to calculate a value inside your models but
not store it in the database. For example consider the following model&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;City&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;region&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;USA:&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You are not able to select the &lt;code&gt;region&lt;/code&gt; "field" but you may use it
as part of your chart &lt;code&gt;terms&lt;/code&gt; as shown below&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataPool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;options&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;source&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SalesHistory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                            &lt;span class="s1"&gt;&amp;#39;bookstore__city&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sale_qty&amp;#39;&lt;/span&gt;
                          &lt;span class="p"&gt;)[:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;terms&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;bookstore__city__region&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;sale_qty&amp;#39;&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;cht&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;datasource&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;series_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;options&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;column&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;stacking&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;stack&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;terms&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;bookstore__city__region&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;sale_qty&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;}},&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="n"&gt;chart_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Sales reports&amp;#39;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;xAxis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;City&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The full example, including source code and live charts is available at
&lt;a href="https://github.com/chartit/django-chartit/tree/master/demoproject"&gt;django-chartit/demoproject&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Using raw SQL queries&lt;/h2&gt;
&lt;p&gt;Django allows you to execute SQL queries directly. These will return objects in the form of
RawQuerySet and can be used in the same way as any other QuerySet.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataPool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;options&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;source&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MonthlyWeatherByCity&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                            &lt;span class="s2"&gt;&amp;quot;SELECT id, month, houston_temp, boston_temp &amp;quot;&lt;/span&gt;
                            &lt;span class="s2"&gt;&amp;quot;FROM demoproject_monthlyweatherbycity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;terms&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;month&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;houston_temp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;boston_temp&amp;#39;&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You will have to select the primary key field and pay attention to field names as to avoid
duplicates when performing &lt;code&gt;JOIN&lt;/code&gt; operations. Otherwise there is no difference. Full examples,
including source code and live charts are available at
&lt;a href="https://github.com/chartit/django-chartit/tree/master/demoproject"&gt;django-chartit/demoproject&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;At Mr. Senko we will do our best to accommodate every need and merge patches
and feature requests as they come in. Should you need commercial support for
this or other open source libraries please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko's support service&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category></entry><entry><title>New release pelican-ab 0.2.3</title><link href="http://mrsenko.com/blog/mr-senko/2016/12/13/new-release-pelican-ab-023/" rel="alternate"></link><published>2016-12-13T14:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2016-12-13:blog/mr-senko/2016/12/13/new-release-pelican-ab-023/</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/MrSenko/pelican-ab"&gt;pelican-ab&lt;/a&gt; is an A/B testing plugin
for Pelican, the static site generator. It allows you to encode experiments in
your templates and renders the experiment selected by the &lt;code&gt;AB_EXPERIMENT&lt;/code&gt;
environment variable.&lt;/p&gt;
&lt;p&gt;Today we are releasing version &lt;code&gt;0.2.3&lt;/code&gt; as an urgent bug fix update handling
internal changes in the latest version of Pelican.
In previous versions Pelican used the &lt;code&gt;JINJA_EXTENSIONS&lt;/code&gt; setting to
configure additional Jinja2 modules. In version 3.7.0, released yesterday,
&lt;code&gt;JINJA_EXTENSIONS&lt;/code&gt; has been replaced with the &lt;code&gt;JINJA_ENVIRONMENT&lt;/code&gt; setting.
Version 0.2.3 of pelican-ab handles both cases and is able to work with older
and newer versions of Pelican!&lt;/p&gt;
&lt;p&gt;This backward-incompatible change in Pelican has been automatically detected by our
monitoring tool
&lt;a href="http://mrsenko.com/blog/mr-senko/2016/05/18/triggering-automatic-dependency-testing/"&gt;Strazar&lt;/a&gt;,
which proves the value of automatic testing against the latest versions of
upstream dependencies!&lt;/p&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;At Mr. Senko we will do our best to accommodate every need and merge patches
and feature requests as they come in. Should you need commercial support for
this or other open source libraries please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko's support service&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>What I've worked on in November 2016</title><link href="http://mrsenko.com/blog/atodorov/2016/11/30/what-ive-worked-on-in-november-2016/" rel="alternate"></link><published>2016-11-30T17:30:00+02:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-11-30:blog/atodorov/2016/11/30/what-ive-worked-on-in-november-2016/</id><summary type="html">&lt;p&gt;Hello everyone, during November I've been focusing on
Cosmic Ray, pylint and django-chartit which are
supported packages in our
&lt;a href="http://mrsenko.com/support/python.html"&gt;Python software stack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The changes include&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cosmic Ray will not fail if baseline test execution fails, see
  &lt;a href="https://github.com/sixty-north/cosmic-ray/pull/181"&gt;PR #181&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Cosmic Ray refactoring in skipping mutations to self, see
  &lt;a href="https://github.com/sixty-north/cosmic-ray/pull/180"&gt;PR #180&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Added new checker to pylint. Statements using &lt;code&gt;len(SEQUENCE)&lt;/code&gt; are
  checked more thoroughly. If there are comparisons to 0 these should
  be refactored. See &lt;a href="https://github.com/PyCQA/pylint/pull/1154"&gt;PR #1154&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Fixed small pylint typo;&lt;/li&gt;
&lt;li&gt;Started work on support for &lt;code&gt;RawQuerySet&lt;/code&gt; in django-chartit. This also alignes
  with support for model properties. There is a POC solution proposed to
  requesters and waiting for feedback. New version of django-chartit will be released
  very soon, see &lt;a href="https://github.com/chartit/django-chartit/issues/44"&gt;#44&lt;/a&gt; and
  &lt;a href="https://github.com/chartit/django-chartit/issues/35"&gt;#35&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt;
if you need faster response cycle for the open source libraries you use.&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>Status Report for October 2016</title><link href="http://mrsenko.com/blog/atodorov/2016/10/31/status-report-for-october-2016/" rel="alternate"></link><published>2016-10-31T11:30:00+02:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-10-31:blog/atodorov/2016/10/31/status-report-for-october-2016/</id><summary type="html">&lt;p&gt;Hello everyone, during October I've been focusing on
&lt;a href="https://github.com/sixty-north/cosmic-ray"&gt;Cosmic Ray&lt;/a&gt; which
is a supported package of our
&lt;a href="http://mrsenko.com/support/python.html"&gt;Python software stack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The changes include&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Report only SURVIVED mutants if &lt;code&gt;--full-report&lt;/code&gt; is not specified;&lt;/li&gt;
&lt;li&gt;Refactoring of &lt;code&gt;MutationCore.visit_mutation_site()&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Update of comparison operators mutations based on the new behavior;&lt;/li&gt;
&lt;li&gt;Refactoring of &lt;code&gt;UnaryOp&lt;/code&gt; mutation operators based on the new behavior
  and introduction of more mutations;&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;BinaryOp&lt;/code&gt; mutation operators and add more mutations;&lt;/li&gt;
&lt;li&gt;Update of &lt;code&gt;tools/inspector.py&lt;/code&gt; to follow the latest code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of my work this month was around &lt;code&gt;visit_mutation_site()&lt;/code&gt; being able
to generate multiple mutations at a single site. For example the code&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;a &amp;lt; b
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;can be mutated into:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;a &amp;lt;= b
a is not b
a &amp;gt; b
... etc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Previously this was done using different mutation operators but now it
is done using a single class and an index to the desired operator replacement.
As a follow up other mutation operators had to be updated as well. As a result
the code base is cleaner and easier to understand.&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt;
if you need faster response cycle for the open source libraries you use.&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>Status Report for September 2016</title><link href="http://mrsenko.com/blog/atodorov/2016/10/04/status-report-for-september-2016/" rel="alternate"></link><published>2016-10-04T10:30:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-10-04:blog/atodorov/2016/10/04/status-report-for-september-2016/</id><summary type="html">&lt;p&gt;Hello everyone, during September I've been focusing on
&lt;a href="https://github.com/sixty-north/cosmic-ray"&gt;Cosmic Ray&lt;/a&gt; which
is a supported package of our Python software stack.&lt;/p&gt;
&lt;p&gt;The changes include better error checking when running the test suite in
Travis CI, fixes for some code smells and style updates, some Python 3.3
compatibility fixes, traceback fix for Python 3.4, new &lt;code&gt;and-or&lt;/code&gt; replacement
operators and internal refactoring.&lt;/p&gt;
&lt;p&gt;During my work on &lt;code&gt;and-or&lt;/code&gt; replacement operators it turned out that &lt;em&gt;Cosmic Ray&lt;/em&gt;
didn't support the notion of one operator producing multiple code mutations.
This required refactoring of project internals and is now currently supported.
As a follow up there are a couple more issues opened to clean up the existing
code, mainly the comparisons replacement operators.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; &lt;em&gt;Cosmic Ray&lt;/em&gt; is still not compatible with Python 3.3 and will probably
never be, despite my work. In &lt;code&gt;cosmic_ray/importing.py&lt;/code&gt; we make use of
&lt;code&gt;importlib.machinery.ModuleSpec&lt;/code&gt; which was introduced in 3.4 and at this moment
we don't want to backport and support this for Python 3.3. The rest of the code
is 3.3 compatible though.&lt;/p&gt;
&lt;p&gt;During September I have also worked on
&lt;a href="http://mrsenko.com/blog/mr-senko/2016/09/14/new-release-django-chartit-027/"&gt;django-chartit v0.2.7&lt;/a&gt; to fix
a nasty &lt;a href="http://mrsenko.com/blog/atodorov/2016/09/14/beware-of-recursion-loop-when-using-super/"&gt;recursion loop&lt;/a&gt;
bug. The follow up of this bug is 
&lt;a href="https://github.com/PyCQA/pylint/pull/1109"&gt;pylint #1109&lt;/a&gt;, which is now merged
into master!&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt;
if you need faster response cycle for the open source libraries you use.&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>Beware of recursion loop when using super()</title><link href="http://mrsenko.com/blog/atodorov/2016/09/14/beware-of-recursion-loop-when-using-super/" rel="alternate"></link><published>2016-09-14T17:20:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-09-14:blog/atodorov/2016/09/14/beware-of-recursion-loop-when-using-super/</id><summary type="html">&lt;p&gt;When working with class inheritance in Python you often find yourself using
&lt;code&gt;super()&lt;/code&gt; to call the parent class methods. The format is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;name&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;method&lt;/span&gt;&lt;span class="p"&gt;]([&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When you have lots of similar code you may be tempted to short-cut the writing
of &lt;code&gt;current class name&lt;/code&gt;. The two possibilities are&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;some_method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;some_method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I have seen this in production code. I'm guilty myself as well because I like
to use the &lt;code&gt;self.__class__&lt;/code&gt; notation! This leads to problems, see
&lt;a href="https://github.com/chartit/django-chartit/issue/41"&gt;django-chartit #41&lt;/a&gt;, when
you inherit from the class which uses these shortcuts. For example&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;original&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Derived&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;derived&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="c1"&gt;# super(self.__class__, self).method()&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Subclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Derived&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;subclass of derived&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Subclass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When you call &lt;code&gt;Derived().method()&lt;/code&gt; the result is &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;derived &amp;lt;class &amp;#39;__main__.Derived&amp;#39;&amp;gt; &amp;lt;class &amp;#39;__main__.Derived&amp;#39;&amp;gt;
original &amp;lt;class &amp;#39;__main__.Derived&amp;#39;&amp;gt; &amp;lt;class &amp;#39;__main__.Derived&amp;#39;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here both shortcuts are evaluated correctly. However when you call
&lt;code&gt;Subclass().method()&lt;/code&gt; the result becomes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;subclass of derived &amp;lt;class &amp;#39;__main__.Subclass&amp;#39;&amp;gt; &amp;lt;class &amp;#39;__main__.Subclass&amp;#39;&amp;gt;
derived &amp;lt;class &amp;#39;__main__.Subclass&amp;#39;&amp;gt; &amp;lt;class &amp;#39;__main__.Subclass&amp;#39;&amp;gt;
derived &amp;lt;class &amp;#39;__main__.Subclass&amp;#39;&amp;gt; &amp;lt;class &amp;#39;__main__.Subclass&amp;#39;&amp;gt;
derived &amp;lt;class &amp;#39;__main__.Subclass&amp;#39;&amp;gt; &amp;lt;class &amp;#39;__main__.Subclass&amp;#39;&amp;gt;
... skip ...
RuntimeError: maximum recursion depth exceeded while calling a Python object
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the example the call &lt;code&gt;super(Subclass)&lt;/code&gt; works fine and invokes
&lt;code&gt;Derived.method()&lt;/code&gt; as expected. Then we call &lt;code&gt;super(Subclass)&lt;/code&gt; inside &lt;code&gt;Derived.method()&lt;/code&gt;
which leads back to where we were hence the recursion loop. The problem is only visible
when you have other classes that inherit from a class which uses incorrect
invocation of &lt;code&gt;super()&lt;/code&gt;. This is why it may lay hidden in production software!&lt;/p&gt;
&lt;p&gt;I definitely expected a severe code smell like that to be discovered by pylint
and Landscape.io. Indeed older versions (pylint-1.3.1-1.el7.noarch) will report
error for &lt;code&gt;super(type(self))&lt;/code&gt; but not newer ones. As it turns out pylint didn't
have a test for this condition and have introduced a regression in the
master branch. I believe this is due to that fact that they didn't check for
using &lt;code&gt;type()&lt;/code&gt; directly but rather that was a side effect which ceased to exist
once the code was updated.
&lt;a href="https://github.com/PyCQA/pylint/pull/1109"&gt;Pylint#1109&lt;/a&gt; adds tests for
the two code smells described above and updates the checkers to explicitly
detect them! Happy testing!&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko's support service&lt;/a&gt;&lt;/strong&gt;
should you need commercial support for this or other open source libraries!&lt;/p&gt;</summary><category term="Python"></category><category term="QA"></category></entry><entry><title>New release django-chartit 0.2.7</title><link href="http://mrsenko.com/blog/mr-senko/2016/09/14/new-release-django-chartit-027/" rel="alternate"></link><published>2016-09-14T16:30:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2016-09-14:blog/mr-senko/2016/09/14/new-release-django-chartit-027/</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/chartit/django-chartit"&gt;django-chartit&lt;/a&gt; is a Django app
that can be used to easily create charts from the data in your database. The
charts are rendered using &lt;code&gt;Highcharts&lt;/code&gt; and &lt;code&gt;jQuery&lt;/code&gt; JavaScript libraries.
Data in your database can be plotted as simple line charts, column charts,
area charts, scatter plots, and many more chart types.&lt;/p&gt;
&lt;p&gt;Today we are releasing version 0.2.7 as part of our regular update process.
This is an urgent bug fix update because previous versions broke subclassing
of &lt;code&gt;Chart&lt;/code&gt; and &lt;code&gt;PivotChart&lt;/code&gt; classes.&lt;/p&gt;
&lt;h2&gt;Changelog since version 0.2.6&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Don't use &lt;code&gt;super(self.__class__)&lt;/code&gt; b/c that breaks chart class inheritance.
    Fixes &lt;a href="https://github.com/chartit/django-chartit/issues/41"&gt;#41&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;At Mr. Senko we will do our best to accommodate every need and merge patches
and feature requests as they come in. Should you need commercial support for
this or other open source libraries please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko's support service&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category></entry><entry><title>August 2016 Status Report</title><link href="http://mrsenko.com/blog/atodorov/2016/08/31/august-2016-status-report/" rel="alternate"></link><published>2016-08-31T11:30:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-08-31:blog/atodorov/2016/08/31/august-2016-status-report/</id><summary type="html">&lt;p&gt;Hello everyone, during August I've been focusing on
&lt;a href="https://github.com/chartit/django-chartit"&gt;django-chartit&lt;/a&gt; which
is a supported package of our Python software stack.&lt;/p&gt;
&lt;p&gt;Since I've taken over maintenance from Praveen Gollakota there
were several bug-fix releases, 3 of them in August. The result is
6 closed issues and increased test coverage. I've spent time to
refactor parts of the code and make it compatible with the latest
Django version. Also cleaned up code smells identified by Landscape.io.&lt;/p&gt;
&lt;p&gt;Future plans for &lt;em&gt;django-chartit&lt;/em&gt; include working on the remaining
open issues. I think I will have to refactor the code a lot more
to make it compatible with the latest Highcharts.js API before
being able to implement the requested features.&lt;/p&gt;
&lt;p&gt;I have also spoken with Highcharts engineering on the topic of
testing their JavaScript charting code in the context of &lt;em&gt;django-chartit&lt;/em&gt;.
My idea is to load the demo project using various versions of the
JavaScript library and make sure everything works on the client side.
This appears to be doable with Selenium.&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt;
if you need faster response cycle for the open source libraries you use.&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>Loading initial data for Many-To-Many fields</title><link href="http://mrsenko.com/blog/atodorov/2016/08/30/loading-initial-data-for-many-to-many-fields/" rel="alternate"></link><published>2016-08-30T17:00:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-08-30:blog/atodorov/2016/08/30/loading-initial-data-for-many-to-many-fields/</id><summary type="html">&lt;p&gt;Previously I've written about how to
&lt;a href="http://mrsenko.com/blog/atodorov/2016/08/08/converting-json-fixtures-to-django-migrations/"&gt;use JSON fixtures in Django migrations&lt;/a&gt;.
This becomes a bit more complicated when you have &lt;code&gt;ManyToMany&lt;/code&gt; fields in
your models. A corner case is when you have a &lt;code&gt;ManyToMany&lt;/code&gt; relation to &lt;code&gt;self&lt;/code&gt;.
The example below comes from &lt;a href="https://github.com/chartit/django-chartit"&gt;django-chartit&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;rating&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;rating_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;authors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ManyToManyField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;publisher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Publisher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on_delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SET_NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;published_at&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateTimeField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;related&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ManyToManyField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;self&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;genre&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Genre&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on_delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SET_NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The fields &lt;code&gt;authors&lt;/code&gt; and &lt;code&gt;related&lt;/code&gt; are
represented as separate tables and are computed when you access objects from this
model. Django automatically handles these fields and creates classes for them.
Before you can use them, you need a reference to their model classes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;demoproject&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Book&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;BookRelated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;BookAuthors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;relation&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_meta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;many_to_many&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;relation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;related&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;BookRelated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remote_field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;through&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;AttributeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# available in Django 1.8&lt;/span&gt;
            &lt;span class="n"&gt;BookRelated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;through&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;relation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;authors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;BookAuthors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remote_field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;through&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;AttributeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# available in Django 1.8&lt;/span&gt;
            &lt;span class="n"&gt;BookAuthors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;through&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The JSON data looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;authors&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;  &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;genre_id&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;publisher_id&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;rating&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8999999999999999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;rating_count&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1869&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;related&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;title&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Freakonomics&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Book&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;pk&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;authors&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;genre_id&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;publisher_id&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;rating&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.4000000000000004&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;rating_count&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;222&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;related&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;title&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hyperspace&amp;quot;&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Book&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;pk&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once we have our related model classes we proceed to store the data
in the database like so&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create Book objects&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;json_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# skip everything which isn&amp;#39;t a book&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Book&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;

    &lt;span class="c1"&gt;# build a list of book authors using the intermediate BookAuthors model&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;author_id&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fields&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;authors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;author_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookAuthors&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;author_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;book_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;author_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;author_id&lt;/span&gt;
        &lt;span class="n"&gt;author_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# you can&amp;#39;t save the `authors` field directly in DB&lt;/span&gt;
    &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fields&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;authors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# build a list of related books using the intermediate BookRelated model&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;related_id&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fields&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;related&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;related_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookRelated&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;related_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_book_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;related_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_book_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;related_id&lt;/span&gt;
        &lt;span class="n"&gt;related_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# you can&amp;#39;t save the `related` field directly in DB&lt;/span&gt;
    &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fields&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;related&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# finally save the Book object&lt;/span&gt;
    &lt;span class="n"&gt;model_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;demoproject&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model_class&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fields&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This works well for &lt;em&gt;django-chartit&lt;/em&gt;. You should take care to
remove the &lt;code&gt;ManyToMany&lt;/code&gt; fields from the JSON data because they
don't actually exist in the &lt;code&gt;Book&lt;/code&gt; class and Django will raise
an exception if you try to assign to them.&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko's support service&lt;/a&gt;&lt;/strong&gt;
should you need commercial support for this or other open source libraries!&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category></entry><entry><title>New release django-chartit 0.2.6</title><link href="http://mrsenko.com/blog/mr-senko/2016/08/16/new-release-django-chartit-026/" rel="alternate"></link><published>2016-08-16T11:00:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2016-08-16:blog/mr-senko/2016/08/16/new-release-django-chartit-026/</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/chartit/django-chartit"&gt;django-chartit&lt;/a&gt; is a Django app
that can be used to easily create charts from the data in your database. The
charts are rendered using &lt;code&gt;Highcharts&lt;/code&gt; and &lt;code&gt;jQuery&lt;/code&gt; JavaScript libraries.
Data in your database can be plotted as simple line charts, column charts,
area charts, scatter plots, and many more chart types.&lt;/p&gt;
&lt;p&gt;Today we are releasing version 0.2.6 as part of our regular update process.&lt;/p&gt;
&lt;h2&gt;Changelog since version 0.2.4&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;0.2.6 (August 16, 2016)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Merged &lt;code&gt;chartit_tests/&lt;/code&gt; with &lt;code&gt;demoproject/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Load test DB with real data to use during testing&lt;/li&gt;
&lt;li&gt;Add more tests&lt;/li&gt;
&lt;li&gt;Update the path to &lt;code&gt;demoproject.settings&lt;/code&gt; when building docs. Fixes
  a problem which caused some API docs to be empty&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;ValueError: not enough values to unpack (expected 2, got 0)&lt;/code&gt;
  with PivotChart when the QuerySet returns empty data&lt;/li&gt;
&lt;li&gt;Dropped requirement on &lt;code&gt;simplejson&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Properly handle unicode data in Pivot charts. Fixes
  &lt;a href="https://github.com/chartit/django-chartit/issues/5"&gt;#5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Demo project updated with Chart and PivotChart examples of
  rendering DateField values on the X axis&lt;/li&gt;
&lt;li&gt;Allow charting of &lt;code&gt;extra()&lt;/code&gt; or &lt;code&gt;annotate()&lt;/code&gt; fields. Fixes
  &lt;a href="https://github.com/chartit/django-chartit/issues/8"&gt;#8&lt;/a&gt; and
  &lt;a href="https://github.com/chartit/django-chartit/issues/12"&gt;#12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Refactor &lt;code&gt;RecursiveDefaultDict&lt;/code&gt; to allow chart objects to be
  serialized to/from cache. Fixes
  &lt;a href="https://github.com/chartit/django-chartit/issues/10"&gt;#10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add information about supported 3rd party JavaScript versions. Fixes
  &lt;a href="https://github.com/chartit/django-chartit/issues/14"&gt;#14&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;0.2.5 (August 3, 2016)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Workaround Python 3 vs. Python 2 list sort issue which breaks
  charts with multiple data sources displayed on the same axis!&lt;/li&gt;
&lt;li&gt;Make demoproject/ compatible with Django 1.10&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;At Mr. Senko we will do our best to accommodate every need and merge patches
and feature requests as they come in. Should you need commercial support for
this or other open source libraries please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko's support service&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category></entry><entry><title>Converting JSON Fixtures to Django Migrations</title><link href="http://mrsenko.com/blog/atodorov/2016/08/08/converting-json-fixtures-to-django-migrations/" rel="alternate"></link><published>2016-08-08T10:00:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-08-08:blog/atodorov/2016/08/08/converting-json-fixtures-to-django-migrations/</id><summary type="html">&lt;p&gt;Older Django apps like
&lt;a href="https://github.com/chartit/django-chartit"&gt;django-chartit&lt;/a&gt; and
&lt;a href="https://github.com/Nitrate/Nitrate"&gt;Nitrate&lt;/a&gt; used JSON fixtures to populate
their databases with initial data. In this article I will show you an easy way
to convert JSON fixtures into native Django migrations.
The JSON fixture looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Seth&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;last_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Godin&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;demoproject.Author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;pk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Guy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;last_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Kawasaki&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;demoproject.Author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;pk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Geoffrey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;last_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Colvin&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;demoproject.Author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;pk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice the &lt;code&gt;pk&lt;/code&gt; and &lt;code&gt;model&lt;/code&gt; fields which tell us where this data came from
and what was the object PK when exported from the database. The &lt;code&gt;fields&lt;/code&gt;
dict is the actual data for this object.&lt;/p&gt;
&lt;p&gt;In Python we can use &lt;code&gt;json.loads&lt;/code&gt; and read the fixture data from disk or
even better assign it directly to a variable inside our Python source file.
Then iterate over all values and create the objects programmatically like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;migrations&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;schema_editor&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Seth&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;last_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Godin&amp;quot;&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
         &lt;span class="s2"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;demoproject.Author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="s2"&gt;&amp;quot;pk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
         &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Guy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;last_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Kawasaki&amp;quot;&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
         &lt;span class="s2"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;demoproject.Author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="s2"&gt;&amp;quot;pk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
         &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Geoffrey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;last_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Colvin&amp;quot;&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
         &lt;span class="s2"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;demoproject.Author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="s2"&gt;&amp;quot;pk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
         &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;app_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;ModelClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;model_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ModelClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fields&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="c1"&gt;# this is required only if you have other models&lt;/span&gt;
        &lt;span class="c1"&gt;# with foreign keys referring to this object&lt;/span&gt;
        &lt;span class="c1"&gt;# obj.pk = record[&amp;#39;pk&amp;#39;]&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Migration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;migrations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Migration&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;dependencies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;demoproject&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0001_initial&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;operations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="n"&gt;migrations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RunPython&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initialize_data&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This works well for most of the cases. You should take care to assign the
same PKs in case there are other objects that hold references to them. If
this isn't the case then you can drop these fields entirely to reduce your
source code size.&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko's support service&lt;/a&gt;&lt;/strong&gt;
should you need commercial support for this or other open source libraries!&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category></entry><entry><title>Reviving django-chartit with version 0.2.4</title><link href="http://mrsenko.com/blog/mr-senko/2016/08/02/reviving-django-chartit-with-version-024/" rel="alternate"></link><published>2016-08-02T14:50:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2016-08-02:blog/mr-senko/2016/08/02/reviving-django-chartit-with-version-024/</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/chartit/django-chartit"&gt;django-chartit&lt;/a&gt; is a Django app
that can be used to easily create charts from the data in your database. The
charts are rendered using &lt;code&gt;Highcharts&lt;/code&gt; and &lt;code&gt;jQuery&lt;/code&gt; JavaScript libraries.
Data in your database can be plotted as simple line charts, column charts,
area charts, scatter plots, and many more chart types.&lt;/p&gt;
&lt;p&gt;The project has been originally developed by
&lt;a href="https://github.com/pgollakota"&gt;Praveen Gollakota&lt;/a&gt; and had gained some
popularity. Recently Mr. Senko was granted the necessary access rights
and we've revived the project with two upstream releases.&lt;/p&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;p&gt;Version 0.2.3 was released a few days ago and merges the &lt;code&gt;django-chartit2&lt;/code&gt; fork by
&lt;a href="https://github.com/grantmcconnaughey"&gt;Grant McConnaughey&lt;/a&gt; which had a few
releases of its own earlier this year. It also makes a few improvements and merged
other pull requests.&lt;/p&gt;
&lt;p&gt;Version 0.2.4 was released today and fixes the usage of deprecated Django
APIs which were removed in Django 1.10.&lt;/p&gt;
&lt;p&gt;Many thanks to Grant for his work on Python 3 and latest Django support!
Many thanks to Praveen for letting us maintain the project.&lt;/p&gt;
&lt;h2&gt;Upgrade from django_chartit2&lt;/h2&gt;
&lt;p&gt;If you are using the &lt;code&gt;django_chartit2&lt;/code&gt; module by Grant then you have to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip uninstall django_chartit2
pip install django_chartit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are not in a hurry to upgrade you may as well wait for the next
release by Grant, which should automatically require &lt;code&gt;django_chartit&lt;/code&gt;
and transparently switch you back to using the original package and not
the fork. However release of such an update is not under our control.&lt;/p&gt;
&lt;h2&gt;Feature plans&lt;/h2&gt;
&lt;p&gt;Mr. Senko is currently working actively to bring the rest of the project
up to speed, including the demo site, which shows how to use the API.
This is a mandatory step before we go ahead to work on various bug fixes
and documentation improvements. We will also be looking into adding more
tests for the project.&lt;/p&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;At Mr. Senko we will do our best to accommodate every need and merge patches
and feature requests as they come in. Should you need commercial support for
this or other open source libraries please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko's support service&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category></entry><entry><title>July 2016 Status Report</title><link href="http://mrsenko.com/blog/atodorov/2016/07/30/july-2016-status-report/" rel="alternate"></link><published>2016-07-30T11:30:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-07-30:blog/atodorov/2016/07/30/july-2016-status-report/</id><summary type="html">&lt;p&gt;Hello everyone, July has been relatively busy in terms of pull requests.
I've been working on &lt;em&gt;Cosmic Ray&lt;/em&gt; the mutation testing tool for Python
and in the last couple of days taken over maintenance of &lt;em&gt;django-chartit&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I've made several improvements against &lt;em&gt;Cosmic Ray&lt;/em&gt;. The most notable
are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added support for nosetests test runner;&lt;/li&gt;
&lt;li&gt;Added a True-False, False-True replacer operator;&lt;/li&gt;
&lt;li&gt;Added workaround for empty &lt;code&gt;__init__.py&lt;/code&gt; files which addresses
&lt;a href="http://bugs.python.org/issue27578"&gt;Python #27578&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Made &lt;em&gt;Cosmic Ray&lt;/em&gt; accept directories and .py file names as possible
inputs which works like a charm for users who rely heavily on bash completion;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will be continuing to work on &lt;em&gt;Cosmic Ray&lt;/em&gt; and also integrate mutation testing
as part of the standard testing toolset used by Mr. Senko.&lt;/p&gt;
&lt;p&gt;Then I've started working on
&lt;a href="https://github.com/chartit/django-chartit"&gt;django-chartit&lt;/a&gt; which is a very
popular module that has been abandoned in the last couple of years.
My immediate goal was to merge back the
&lt;a href="https://github.com/grantmcconnaughey/django-chartit2"&gt;django-chartit2&lt;/a&gt; fork
by Grant McConnaughey, which adds Python 3 and latest Django support and merge
some pending pull requests.
I've been working on fixing quite a few errors and warnings reported by the test
tools and getting the documentation up to speed. A much anticipated release on
PyPI will be coming out very soon. Once the merger between &lt;em&gt;django-chartit&lt;/em&gt; and
&lt;em&gt;django-chartit2&lt;/em&gt; is complete I will continue working on the reported issues.&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;&lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribe to Mr. Senko&lt;/a&gt;&lt;/strong&gt;
if you need a faster response cycle for the open source libraries you use.&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>June 2016 Status Report</title><link href="http://mrsenko.com/blog/atodorov/2016/06/30/june-2016-status-report/" rel="alternate"></link><published>2016-06-30T23:30:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-06-30:blog/atodorov/2016/06/30/june-2016-status-report/</id><summary type="html">&lt;p&gt;Hello everyone, last month has been a bit of a holiday and I don't have much
to share. I've been playing around with mutation testing tools. The few
patches I did are both related to &lt;em&gt;Cosmic Ray&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allow session-name.json to be passed on the command line,
  &lt;a href="https://github.com/sixty-north/cosmic-ray/pull/144"&gt;PR #144&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Report the mutation results using unified diff format,
  &lt;a href="https://github.com/sixty-north/cosmic-ray/pull/145"&gt;PR #145&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Right now I'm experimenting with running mutation testing against a few
popular open source libraries, written in both Python and Ruby.
So far the tools seem to work fine, except minor issues. However the test
suites I've been playing with aren't very robust and most of the mutants stay
alive! I will write another blog post on the subject once I have more
information to share. I hope you like my work and please
&lt;strong&gt;subscribe to &lt;a href="http://mrsenko.com/subscribe.html"&gt;Mr. Senko&lt;/a&gt;!&lt;/strong&gt;
if need a faster response cycle for the open source libraries you use.&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>May 2016 Status Report</title><link href="http://mrsenko.com/blog/atodorov/2016/05/31/may-2016-status-report/" rel="alternate"></link><published>2016-05-31T23:30:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-05-31:blog/atodorov/2016/05/31/may-2016-status-report/</id><summary type="html">&lt;p&gt;Here is a quick status report of my work for &lt;a href="http://MrSenko.com"&gt;Mr. Senko&lt;/a&gt;. During
May 2016 I've worked on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New feature: display social icons in index page header for
&lt;a href="https://github.com/gilsondev/pelican-clean-blog/pull/43"&gt;pelican-clean-blog&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Enabled StatusCake Real User Monitoring (RUM) for
&lt;a href="https://github.com/alexandrevicenzi/Flex/pull/41"&gt;Flex&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Worked on improving assets plugin support for
&lt;a href="https://github.com/alexandrevicenzi/Flex/pull/40"&gt;Flex&lt;/a&gt;
after the original author didn't update their PR;&lt;/li&gt;
&lt;li&gt;Proposed several fixes for
&lt;a href="https://github.com/getpelican/pelican/pulls/atodorov"&gt;Pelican&lt;/a&gt;
to bugs labeled with the 3.7 milestone;&lt;/li&gt;
&lt;li&gt;Forked, merged and updated the
&lt;a href="http://mrsenko.com/blog/mr-senko/2016/05/25/reviving-pelican-octopress-and-pelipress/"&gt;pelican-octopress-theme&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Released
&lt;a href="http://mrsenko.com/blog/mr-senko/2016/05/12/ab-testing-with-jinja2-and-pelican/"&gt;A/B testing tools for Jinja and Pelican&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Released
&lt;a href="http://mrsenko.com/blog/mr-senko/2016/05/18/triggering-automatic-dependency-testing/"&gt;Strazar&lt;/a&gt; -
a monitoring tool that we use to automatically trigger new builds in Travis-CI;&lt;/li&gt;
&lt;li&gt;Started working on
&lt;a href="https://github.com/pypa/warehouse/pull/1203"&gt;warehouse&lt;/a&gt; - the new code
which will run PyPI.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Focusing on abandoned pull requests&lt;/h2&gt;
&lt;p&gt;While working on several issues I've noticed pull requests that were well
written but they had minor issues, for example code formatting. The code
review was done in the initial PR but the author didn't update their patches.
As a result of this the pull request stayed open for a long time.
I've also been focusing on issues and pull requests which were labeled for
a particular release but were left open for quite a long time. Hopefully
we'll see those releases coming out soon.&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;subscribe to &lt;a href="http://mrsenko.com/subscribe.html"&gt;Mr. Senko&lt;/a&gt;!&lt;/strong&gt;
if need a faster response cycle for the open source libraries you use.&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>Reviving pelican-octopress and pelipress</title><link href="http://mrsenko.com/blog/mr-senko/2016/05/25/reviving-pelican-octopress-and-pelipress/" rel="alternate"></link><published>2016-05-25T14:10:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2016-05-25:blog/mr-senko/2016/05/25/reviving-pelican-octopress-and-pelipress/</id><summary type="html">&lt;p&gt;&lt;em&gt;pelican-octopress-theme&lt;/em&gt; and &lt;em&gt;Pelipress&lt;/em&gt; are popular themes for &lt;em&gt;Pelican&lt;/em&gt;
but are not actively
developed at the moment. Mr. Senko decided to fork and
continue their active development. The new repository is at
&lt;a href="https://github.com/MrSenko/pelican-octopress-theme"&gt;MrSenko/pelican-octopress-theme&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Why did we fork&lt;/h2&gt;
&lt;p&gt;Initially we've tried sending pull requests to the upstream repository but
later noticed multiple issues and pull requests which were left open for more than
a year, nearly 2 years in the worst cases. &lt;em&gt;Pelipress&lt;/em&gt; on the other hand
has not been rebased back to &lt;em&gt;pelican-octopress-theme&lt;/em&gt; for almost 3 years!&lt;/p&gt;
&lt;p&gt;We've emailed the original authors of both projects but didn't get a reply to our
inquiries in a few weeks so decided to fork and continue forward.&lt;/p&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;p&gt;The following features have been merged from &lt;em&gt;pelican-octopress-theme&lt;/em&gt; by
resolving all conflicts which were present:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Merge PR #88 - add header images and background colors. Fixes issue #52&lt;/li&gt;
&lt;li&gt;Merge PR #87 - update documentation. Fixes issue #56&lt;/li&gt;
&lt;li&gt;Merge PR #84 - add INDEX_FULL_CONTENT setting&lt;/li&gt;
&lt;li&gt;Merge PR #83 - load scripts before plugins that might use them&lt;/li&gt;
&lt;li&gt;Merge PR #82 - add disqus_identifier article metadata. Fixes issue #81&lt;/li&gt;
&lt;li&gt;Merge PR #76 - add support for Mailchimp newsletter registrations&lt;/li&gt;
&lt;li&gt;Merge PR #73 - add ARCHIVE_TITLE setting&lt;/li&gt;
&lt;li&gt;Merge PR #72 - add support for Google AdSense in sidebar&lt;/li&gt;
&lt;li&gt;Merge PR #67 - improved sidebar control with AUTHOR_ABOUT, DISPLAY_CATEGORIES,
  DISPLAY_TAGS and DISPLAY_FEEDS settings. SIDEBAR_IMAGE is only shown when
  AUTHOR_ABOUT is set!&lt;/li&gt;
&lt;li&gt;Merge PR #55 - add SHOW_ARTICLE_NEIGHBORS, SHOW_DISQUS_COMMENT_COUNT,
  ARTICLE_ASIDES, PAGE_ASIDES and INDEX_ASIDES settings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following features have been inspired by &lt;em&gt;Pelipress&lt;/em&gt; and cleanly re-implemented
on top of the current fork:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add DISPLAY_SOCIAL_ICONS setting and the social_icons sidebar&lt;/li&gt;
&lt;li&gt;Add FOOTER_INCLUDE setting&lt;/li&gt;
&lt;li&gt;Add SHOW_HEADER setting&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;At Mr. Senko we will do our best to accommodate every need and merge patches
and feature requests as they come in.
Should you need commercial support for this or other open source libraries
please &lt;strong&gt;subscribe to
&lt;a href="http://mrsenko.com/subscribe.html"&gt;Mr. Senko's support service&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>Triggering Automatic Dependency Testing</title><link href="http://mrsenko.com/blog/mr-senko/2016/05/18/triggering-automatic-dependency-testing/" rel="alternate"></link><published>2016-05-18T16:10:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2016-05-18:blog/mr-senko/2016/05/18/triggering-automatic-dependency-testing/</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/MrSenko/strazar"&gt;Strazar&lt;/a&gt; (from Bulgarian for sentinel)
helps you monitor upstream sources
and once a new package version is found your &lt;code&gt;.travis.yml&lt;/code&gt; environment is updated
and the changes committed to GitHub which automatically triggers a new build!
This approach relies on having a good test suite, but you already have that
covered, right ?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Strazar&lt;/em&gt; was inspired by Forbes Lindesay's &lt;em&gt;GitHub Automation&lt;/em&gt; talk
at DEVit Conf 2015 and we're very excited to announce this release days before
this year's DEVit Conf!&lt;/p&gt;
&lt;h2&gt;What is currently supported&lt;/h2&gt;
&lt;p&gt;In its initial release &lt;em&gt;Strazar&lt;/em&gt; only supports &lt;a href="http://pypi.python.org"&gt;PyPI&lt;/a&gt;,
Travis-CI and GitHub. We already have written the code to detect new
&lt;a href="http://rubygems.org"&gt;RubyGems&lt;/a&gt; and &lt;a href="https://www.npmjs.com"&gt;NPM&lt;/a&gt; packages
and that will land in the next versions.
However we also found the wonderful &lt;a href="http://libraries.io"&gt;libraries.io&lt;/a&gt;
service which is already aware of many more package repositories so we'll
try to integrate &lt;em&gt;Strazar&lt;/em&gt; with it in the future.&lt;/p&gt;
&lt;p&gt;We've started with Travis-CI because this is what we use but support for
other CI environments is very easy to add. &lt;em&gt;Strazar&lt;/em&gt; calculates all
possible combinations between package names and their versions and writes
them to a text file. To add another CI environment we only need to parse
and write the file in the correct format.&lt;/p&gt;
&lt;h2&gt;Installation and configuration&lt;/h2&gt;
&lt;p&gt;To install &lt;em&gt;Strazar&lt;/em&gt; execute&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install strazar
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then configure the &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; environment variable. This token needs
the &lt;code&gt;public_repo&lt;/code&gt; or &lt;code&gt;repo&lt;/code&gt; permission in order to push commits to
your repositories.&lt;/p&gt;
&lt;h2&gt;Prepare .travis.yml&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Strazar&lt;/em&gt; uses the variable format &lt;code&gt;_PACKAGE_NAME&lt;/code&gt; where the 
variable name starts with an under-score followed by the capitalized
package name. All hyphens are converted to under-scores as well.
We advise that your &lt;code&gt;.travis.yml&lt;/code&gt; files follow the same convention.
This is how &lt;em&gt;Strazar&lt;/em&gt;'s own &lt;code&gt;.travis.yml&lt;/code&gt; looks like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;2.7&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;3.5&lt;/span&gt;
&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;coverage&lt;/span&gt; &lt;span class="n"&gt;flake8&lt;/span&gt; &lt;span class="n"&gt;mock&lt;/span&gt; &lt;span class="n"&gt;PyYAML&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;$_PYYAML&lt;/span&gt; &lt;span class="n"&gt;PyGithub&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;$_PYGITHUB&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;_PYGITHUB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.26&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;_PYYAML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;3.11&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;How to monitor PyPI&lt;/h2&gt;
&lt;p&gt;PyPI doesn't provide web-hooks so we examine the RSS feed for packages of
interest based on configuration settings. To start monitoring PyPI execute
the following code from a cron job (here at Mr. Senko we do it every hour)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;strazar&lt;/span&gt;

&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GITHUB_TOKEN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;xxxxxxxxx&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;PyYAML&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;cb&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;strazar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update_github&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;args&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;GITHUB_REPO&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MrSenko/strazar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;GITHUB_BRANCH&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;GITHUB_FILE&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.travis.yml&amp;#39;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;strazar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;monitor_pypi_rss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;config&lt;/code&gt; dict uses package names as 1st level keys. If you are interested
in a particular package add it here. All other packages detected from the RSS
feed will be ignored. If your project depends on multiple packages you have to
list all of them as 1st level keys in &lt;code&gt;config&lt;/code&gt; and duplicate the key values.&lt;/p&gt;
&lt;p&gt;The key value is a list of call-back methods and arguments to execute once a
new package has been published online. If two or more repositories depend on
the same package then add them as values to this list.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;strazar.update_github&lt;/code&gt; call-back knows how to commit to your source repo
which will automatically trigger a new CI build.&lt;/p&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Strazar&lt;/em&gt; is provided as open source for everyone to use.
At Mr. Senko we will do our best to accommodate every need and merge patches
and feature requests as they come in.
Should you need commercial support for this or other open source libraries
please &lt;strong&gt;subscribe to
&lt;a href="http://mrsenko.com/subscribe.html"&gt;Mr. Senko's support service&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>A/B Testing with Jinja2 and Pelican</title><link href="http://mrsenko.com/blog/mr-senko/2016/05/12/ab-testing-with-jinja2-and-pelican/" rel="alternate"></link><published>2016-05-12T10:10:00+03:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2016-05-12:blog/mr-senko/2016/05/12/ab-testing-with-jinja2-and-pelican/</id><summary type="html">&lt;p&gt;A/B testing is a randomized experiment with two variants,
which are the control and variation in the controlled experiment.
In this article we're going to present a solution which works with
&lt;em&gt;Pelican&lt;/em&gt; and other &lt;em&gt;Jinja2&lt;/em&gt; based static site generators.&lt;/p&gt;
&lt;h2&gt;The markup&lt;/h2&gt;
&lt;p&gt;In statically generated websites you either have content or templates.
We've been interested in encoding A/B experiments in templates and didn't
find a solution so we made our own.
&lt;a href="https://github.com/MrSenko/jinja-ab"&gt;jinja-ab&lt;/a&gt; is an A/B testing extension
for &lt;em&gt;Jinja2&lt;/em&gt;. It allows you to encode experiments in your templates and renders
the experiment selected by the &lt;code&gt;AB_EXPERIMENT&lt;/code&gt; environment variable. &lt;strong&gt;control&lt;/strong&gt;
is the default experiment name if &lt;code&gt;AB_EXPERIMENT&lt;/code&gt; is not specified!
The syntax looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;experiment&lt;/span&gt; &lt;span class="nv"&gt;control&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;This is the control&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endexperiment&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;experiment&lt;/span&gt; &lt;span class="nv"&gt;v1&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;This is version 1&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endexperiment&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Rendering and output control&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;jinja-ab&lt;/em&gt; deals with rendering the template string based on the value of
&lt;code&gt;AB_EXPERIMENT&lt;/code&gt;. It is up to you to decide what to do with the result.
At &lt;a href="http://MrSenko.com"&gt;Mr. Senko&lt;/a&gt; we use &lt;em&gt;Pelican&lt;/em&gt; and created the complimentary
&lt;a href="https://github.com/MrSenko/pelican-ab"&gt;pelican-ab&lt;/a&gt; plugin. To enable the plugin
simply add it in your &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path/to/pelican-ab&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pelican_ab&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After encoding your experiments into the theme templates you can generate the
resulting HTML files by running the command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;AB_EXPERIMENT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;v1&amp;quot;&lt;/span&gt; make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When rendering experiments the resulting HTML files are saved under
&lt;code&gt;OUTPUT_PATH&lt;/code&gt; plus the experiment name. For example 'output/v1', 'output/v2',
etc. The control experiments are rendered directly under &lt;code&gt;OUTPUT_PATH&lt;/code&gt;.
For example the control directory structure of this blog looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;output/
|-- blog
|   |-- 2016
|   |   | ...
|   |-- archives
|   |-- atodorov
|   |   `-- ...
|   |-- mr-senko
|   |   `-- ...
|   `-- tags
|       | ...
|-- feeds
|-- images
|-- js
|-- support
`-- theme
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After rendering an experiment called 'v1' the directory structure looks like
this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;output/v1/
|-- blog
|   |-- 2016
|   |   | ...
|   |-- archives
|   |-- atodorov
|   |   `-- ...
|   |-- mr-senko
|   |   `-- ...
|   `-- tags
|       | ...
`-- support
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Only content output is saved under the new directory because content it
rendered using the templates which we want to A/B test. This is how &lt;em&gt;pelican-ab&lt;/em&gt;
works for the moment.&lt;/p&gt;
&lt;p&gt;This plugin also automatically updates the &lt;code&gt;Content.url&lt;/code&gt; and &lt;code&gt;URLWrapper.url&lt;/code&gt;
class properties from &lt;em&gt;Pelican&lt;/em&gt; so that things like &lt;code&gt;{{ article.url }}&lt;/code&gt;
and &lt;code&gt;{{ author.url }}&lt;/code&gt; will point to URLs from the same experiment.&lt;/p&gt;
&lt;p&gt;In other words each experiment
produces its own HTML and URL structure, using the experiment name as
prefix. Once a user lands on
a page from experiment "v1" all links to other content will also point to
"v1", for example 'blog/about-me.html' becomes 'v1/blog/about-me.html', etc.
This will help you gather more information from the experiment because
all your internal URLs are under the same experiment,
using the same HTML template variation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; wherever you use the &lt;code&gt;{{ SITEURL }}&lt;/code&gt; template tag without pointing
to the content url property the values will not be changed. This means
all your CSS, JavaScript and images will continue to work without being
duplicated under the experiment directory.&lt;/p&gt;
&lt;h2&gt;Testing and publishing experiments&lt;/h2&gt;
&lt;p&gt;For local development use the command &lt;code&gt;AB_EXPERIMENT="xy" make regenerate&lt;/code&gt;
or &lt;code&gt;AB_EXPERIMENT="xy" make html&lt;/code&gt; together with &lt;code&gt;make serve&lt;/code&gt; to review the
experiments. When you are ready to publish them online execute the following
sequence of commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm -rf output/
make github
&lt;span class="nv"&gt;AB_EXPERIMENT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;01&amp;quot;&lt;/span&gt; make github
&lt;span class="nv"&gt;AB_EXPERIMENT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;02&amp;quot;&lt;/span&gt; make github
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default &lt;code&gt;publishconf.py&lt;/code&gt; contains &lt;code&gt;DELETE_OUTPUT_DIRECTORY = True&lt;/code&gt;
which causes &lt;em&gt;pelican-ab&lt;/em&gt; to raise an exception. The problem is that you need
to execute &lt;code&gt;make publish&lt;/code&gt; or &lt;code&gt;make github&lt;/code&gt; for each experiment you'd like to
publish online. When &lt;code&gt;DELETE_OUTPUT_DIRECTORY&lt;/code&gt; is True the previous contents
will be deleted and &lt;strong&gt;ONLY&lt;/strong&gt; that variation will be published!
This will break your website because everything will be gone!&lt;/p&gt;
&lt;h2&gt;A/B testing&lt;/h2&gt;
&lt;p&gt;Now that we finally got our experiments encoded and rendered it is time to
re-route some of the web traffic to them and analyze the results. &lt;em&gt;pelican-ab&lt;/em&gt;
is not designed to deal with this, you will have to use external tools to
control how your web traffic is redirected to your experiments and what sort
of results are collected. Our favorite ones are &lt;em&gt;LuckyOrange&lt;/em&gt; and &lt;em&gt;Optimizely&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;jinja-ab&lt;/em&gt; and &lt;em&gt;pelican-ab&lt;/em&gt; are provided as open source for everyone to use.
At Mr. Senko we will do our best to accommodate every need and merge patches
and feature requests as they come in.
Should you need commercial support for these or other open source libraries
please &lt;strong&gt;subscribe to &lt;a href="http://mrsenko.com/subscribe.html"&gt;Mr. Senko&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>Conditional Include in Jinja2 and Pelican</title><link href="http://mrsenko.com/blog/atodorov/2016/05/05/conditional-include-in-jinja2-and-pelican/" rel="alternate"></link><published>2016-05-05T14:10:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-05-05:blog/atodorov/2016/05/05/conditional-include-in-jinja2-and-pelican/</id><summary type="html">&lt;p&gt;How do you create Jinja templates which behave differently based
on what Pelican plugins are loaded ? I've hit this problem while
working on improving
&lt;a href="https://github.com/alexandrevicenzi/Flex/pull/20"&gt;Flex PR #20&lt;/a&gt;.
The straight forward solution looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;PLUGINS&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;assets&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;assets&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;stylesheet/style.css&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;filters&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cssmin&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;style.min.css&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;ASSET_URL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endassets&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;THEME_STATIC_DIR&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/stylesheet/style.min.css&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It appears to work great except when the &lt;code&gt;assets&lt;/code&gt; plugin isn't loaded.
Then we get a &lt;a href="https://github.com/pallets/jinja/pull/582"&gt;TemplateSyntaxError&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;TemplateSyntaxError&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Encountered&lt;/span&gt; &lt;span class="n"&gt;unknown&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;assets&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Jinja&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;looking&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;endfor&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;else&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;innermost&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;needs&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;closed&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;for&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;{% assets %}&lt;/code&gt; tag is not defined because the &lt;code&gt;assets&lt;/code&gt; plugin is missing.
We may expect that Jinja will parse this tag only if the body of the for loop is
executed but instead Jinja tries to parse all tags before rendering the template.
The solution, as proposed by @ThiefMaster on GitHub, is to use a conditional
&lt;code&gt;{% include %}&lt;/code&gt; tag inside the for loop body like so&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;PLUGINS&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;assets&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;assets.html&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;THEME_STATIC_DIR&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/stylesheet/style.min.css&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Where &lt;code&gt;assets.html&lt;/code&gt; looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;assets&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;stylesheet/style.css&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;filters&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cssmin&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;style.min.css&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;ASSET_URL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endassets&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I don't like splitting out the HTML code in this way. Imagine that we later decide to
add a second CSS file to the template. The risk of forgetting to add it in both places
increases as the number of CSS files (or places where we use the same HTML pattern)
increases. However this appears to be the only way to conditionally use the &lt;code&gt;assets&lt;/code&gt;
plugin only when it is loaded. The proposed changes are in
&lt;a href="https://github.com/alexandrevicenzi/Flex/pull/40"&gt;Flex PR #40&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;subscribe to &lt;a href="http://mrsenko.com/subscribe.html"&gt;Mr. Senko&lt;/a&gt;&lt;/strong&gt;
if you need a faster release cycle for the open source libraries you use.&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>April 2016 Report</title><link href="http://mrsenko.com/blog/atodorov/2016/05/03/april-2016-report/" rel="alternate"></link><published>2016-05-03T12:30:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-05-03:blog/atodorov/2016/05/03/april-2016-report/</id><summary type="html">&lt;p&gt;Here is a quick status report of my work for &lt;a href="http://MrSenko.com"&gt;Mr. Senko&lt;/a&gt;. During
April 2016 I've worked on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Additional patches to the &lt;a href="https://github.com/Nitrate/Nitrate/pulls/atodorov"&gt;Nitrate&lt;/a&gt;
test case management system;&lt;/li&gt;
&lt;li&gt;New features for the &lt;a href="https://github.com/railslove/i18n_viz/pulls/atodorov"&gt;i18n_viz&lt;/a&gt;
Ruby gem;&lt;/li&gt;
&lt;li&gt;New features for &lt;a href="https://github.com/getpelican/pelican/pull/1926"&gt;Pelican&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Nitrate&lt;/h2&gt;
&lt;p&gt;As I've written previously Nitrate is a test case management system, which we use internally.
Unfortunately it is using very old version of Django and it is not so easy to migrate
forward.&lt;/p&gt;
&lt;p&gt;I've decided to stall all of my previous pull requests and focus on getting the tests
up and running in Travis-CI before going forward. I've managed to fix a few of them
locally but then hit a road block. The fact that the Nitrate team is very limited in
capacity (only 1 person at the moment) isn't helping either. I will continue working
on this but with lower priority.&lt;/p&gt;
&lt;h2&gt;New features for i18n_viz&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/railslove/i18n_viz"&gt;i18n_viz&lt;/a&gt; is a very cool Ruby gem which
lets your browse your own Rails application and visualize and edit your translatable
strings. Think of it as a reversed lookup for translations.
i18n_viz highlights your app’s translatable text and adds a tooltip containing
the translation key which links to the translation in your favorite online
translation tool.&lt;/p&gt;
&lt;p&gt;I have added the &lt;code&gt;css_override&lt;/code&gt; option to allow for better styling of the
highlights and tooltips provided by this gem.
&lt;a href="https://github.com/railslove/i18n_viz/pull/20"&gt;PR #20&lt;/a&gt; has already been merged
but not released into a new version yet.&lt;/p&gt;
&lt;p&gt;I've also fixed a
&lt;a href="https://github.com/railslove/i18n_viz/pull/19"&gt;bug with nested HTML tags&lt;/a&gt; and
changed the &lt;code&gt;external_tool_url&lt;/code&gt; option to support
&lt;a href="https://github.com/railslove/i18n_viz/pull/22"&gt;code execution&lt;/a&gt;. With this
the user is able to configure the URL to an online translation tool during
runtime. My particular use-case is to include the currently selected locale
in the URL string. These two pull requests are not merged yet and unfortunately
the package author is busy at the moment so it will take some time.&lt;/p&gt;
&lt;h2&gt;New features for Pelican&lt;/h2&gt;
&lt;p&gt;I've managed to implement more granular control over tag, categories and
author slugs in Pelican in
&lt;a href="https://github.com/getpelican/pelican/pull/1926"&gt;PR #1926&lt;/a&gt; and the code is
already merged!&lt;/p&gt;
&lt;p&gt;Under the hood the &lt;code&gt;slugify()&lt;/code&gt; method now can skip replacing non-alphanumeric
characters so you have more control over the generated URLs. I've experienced
this problem when migrating my personal blog from Octopress to Pelican.&lt;/p&gt;
&lt;p&gt;Then I've also added the possibility to configure author slugs, which is
useful to blogs with multiple authors or if you want your author slug
to match your GitHub username.
In fact &lt;code&gt;pelicanconf.py&lt;/code&gt; for Mr. Senko's blog looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;blog/{author}/{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;}/{slug}/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;blog/{slug}/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_SAVE_AS&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AUTHOR_URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR_SUBSTITUTIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Alexander Todorov&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;atodorov&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Krasimir Tsonev&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;&amp;#39;krasimir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; older URLs on this blog do not match above settings for
compatibility reasons!&lt;/p&gt;
&lt;p&gt;I hope you like my work and please
&lt;strong&gt;consider subscribing to &lt;a href="http://mrsenko.com/subscribe.html"&gt;Mr. Senko&lt;/a&gt;!&lt;/strong&gt;
if need a faster release cycle for the open source libraries you use.&lt;/p&gt;</summary><category term="Python"></category><category term="Ruby"></category></entry><entry><title>March 2016 Report</title><link href="http://mrsenko.com/blog/2016/03/30/march-2016-report/" rel="alternate"></link><published>2016-03-30T14:30:00+03:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-03-30:blog/2016/03/30/march-2016-report/</id><summary type="html">&lt;p&gt;Here is a quick status report for &lt;a href="http://MrSenko.com"&gt;Mr. Senko&lt;/a&gt;. During
March 2016 I've worked on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A few more improvements to
&lt;a href="https://github.com/gilsondev/pelican-clean-blog/pulls?q=is%3Apr+author%3Aatodorov+is%3Aclosed"&gt;pelican-clean-blog&lt;/a&gt;
theme;&lt;/li&gt;
&lt;li&gt;Two new features for 
&lt;a href="https://github.com/getpelican/pelican/pulls/atodorov"&gt;Pelican&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Several bug fixes and improvements for
&lt;a href="https://github.com/Nitrate/Nitrate/pulls/atodorov"&gt;Nitrate&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Nitrate Test Case Management System&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://nitrate.readthedocs.org/en/latest/guide/introduction.html"&gt;Nitrate&lt;/a&gt; is
a test case management system written with Django. We use it internally to track
testing activities. It is reasonably good at what it does but there are some
issues with how the software has been developed in the past.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Nitrate is Django based but doesn't follow best Django practices.
There are places where it executes raw SQL against the DB instead of using
Django's ORM model. This makes it non-portable between DBMS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nitrate has a long development history but poor documentation. It has introduced
DB migrations and updates in a non-Django friendly way. The currently preferred
method is to execute an SQL file against the DB. This is poorly documented and
of course I've missed it. I'm sure others will miss it as well.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Going forward with native Django migrations all of these SQL files need to be
converted and I haven't looked into this yet. Another possibility is to just release
a new version which doesn't allow automatic DB updates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are a bunch of static files (e.g. images) used directly in CSS and JavaScript files.
This immediately breaks if you decide to host your static files elsewhere
(e.g. Amazon S3 bucket). There is an easy fix but it requires the use of latest Django.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Django version (and other dependencies) are quite old. This introduces security
risk and also makes it harder to develop new functionality sometimes. I have opened
a PR to bring Django forward to 1.8.11 version but that still needs more work.
Yes I broke the test-suite as part of the migration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;So far my impression is that the Nitrate team are slow to respond on GitHub.
Given the current state of Nitrate and the amount of work which needs to be done
this is disappointing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you like my work and need a faster response cycle please
&lt;strong&gt;consider subscribing to &lt;a href="http://mrsenko.com/subscribe.html"&gt;Mr. Senko&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>Why Your Open Source Bugs Will Not Be Fixed</title><link href="http://mrsenko.com/blog/2016/02/14/why-your-open-source-bugs-will-not-be-fixed/" rel="alternate"></link><published>2016-02-14T17:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2016-02-14:blog/2016/02/14/why-your-open-source-bugs-will-not-be-fixed/</id><summary type="html">&lt;p&gt;Here at Mr. Senko we've been researching why many bugs reported against
open source projects don't get fixed. This is not surprising given that many
contributors to open source use the "scratch your own itch" principle.
We've been talking to various people why some bugs are left open. We've
reached both open source maintainers and users and here are the results.&lt;/p&gt;
&lt;h2&gt;Time is Code&lt;/h2&gt;
&lt;p&gt;The core of the problem revolves around time constraints. Open source developers
are limited by the time they have to work on the project, even more so if they
are volunteers. Their focus is on critical and high priority issues and driving
the project through its roadmap and they don't have enough time for you.
The side effect of this is that many smaller
issues are dealt with only if there is free time left.
Some factors to consider here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Not being able to reproduce the bug because it requires a particular
environment or is not explained very well;&lt;/li&gt;
&lt;li&gt;The bug is not immediately affecting the developer and they have
little incentive to fix it;&lt;/li&gt;
&lt;li&gt;There is a limited number of users who are affected by the bug and it
is not getting the priority or visibility it needs to be fixed by the
developer;&lt;/li&gt;
&lt;li&gt;Reviewing pull requests and discussing contributions is integral part of
open source. Usually only the core developers of the project are doing this
which limits even more their time to work on other issues;&lt;/li&gt;
&lt;li&gt;Popular projects, especially with exponential user-base growth are flooded
with feature requests and minor priority bug reports. Although these will
help the project become better in the long-run they reduce the free time
available to developers because they constantly have to review and keep track
of all these reports while still working on the current version;&lt;/li&gt;
&lt;li&gt;Lack of adequate testing or sufficient test coverage makes it harder to
accept new features and fix existing bugs;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You see where this is going - the more problems there are, the less time there
is to fix them and the problems pile up even more, shrinking the available time
as we go along.&lt;/p&gt;
&lt;p&gt;Larger and more popular projects tend to exhibit more severe problems arising
from the above factors. Of the top 1000 Python, Ruby and Node.js packages
the average time an issue spends between open and closed is around 30 days,
some projects going to the extremes of 100s of days. All of this because the
developer to user ratio in these projects is too low.
On the other hand smaller communities are usually more responsive and
easier to work with. From our experience single developer projects tend to
respond within 2 days on average.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to Help&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If a smaller project works for you and the developer is responsive enough
don't switch to a more popular one unless needed;&lt;/li&gt;
&lt;li&gt;If you have the technical capability provide help in code review and
pull requests discussion. Often spotting formatting mistakes or instructing
the contributor to squash their commits, provide short description in the docs
or a few tests will go a long way in helping the core group of developers;&lt;/li&gt;
&lt;li&gt;Provide clear steps to reproduce a bug, even better provide automated test
case for it. If you require a specialized setup try to provide a system where
the bug is present so the developer can debug live;&lt;/li&gt;
&lt;li&gt;Provide QA expertise by writing and executing test plans against new versions
of the project, even better contribute automated tests for that;&lt;/li&gt;
&lt;li&gt;Spend some time to investigate and increase test coverage. You may be using
the non-covered code and the next upgrade will break it without tests;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Leadership, Management and Politics&lt;/h2&gt;
&lt;p&gt;Less frequently cited problems are in the fields of leadership, project
management and community politics.
On the extreme end here we see projects which are not under active development
anymore but are still widely adopted by the general public. This is the case
with some of Node.js most downloaded packages. In the same category are also
projects which do have some development community(possibly with write access)
but it doesn't quite understand what the source code is doing and is not
able to promptly fix bugs or is unwilling to do so.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to Help&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Become the secondary (or even primary) maintainer of the project if you have
the technical knowledge. If you want to step down announce your intentions
loud and clear and allow some time for the transition to take place.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Management and politics are often a problem in large and popular projects
where every developer has their own vision of how the project should evolve
and all of these visions need to be brought together and steered into a single
direction. In projects which are corporately sponsored there are trusted
developers who perform these tasks. In bigger projects there could even be
a management board who decides on where the project is going next and how
developer resources will be best utilized. For projects backed by a foundation
this is certainly the case.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to Help&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Provide a management capacity who will serve on the project's board. That
person will help raise visibility to your particular issues but their general
task will be to help the project move forward. If they fail to do so the
relationship will simply not work. Some projects have a fixed term for board
members to prevent a single entity overtaking control of the project.&lt;/p&gt;
&lt;h2&gt;Lorem Ipsum&lt;/h2&gt;
&lt;p&gt;Being humans developers are not prone to simple facts that make their work
non-effective or slow.&lt;/p&gt;
&lt;p&gt;We've been told that some developers don't understand the bug-fix or more likely
the software development lifecycle. It sounds like we're talking about
inexperienced developers who managed to create a popular open source project
alone. Or maybe we're talking about developers who come from the start-up
scene while users are coming from the enterprise world and are used to working
in a different manner ? Either-way both parties have to learn from each other
and not allow tempers to rise too much.&lt;/p&gt;
&lt;p&gt;Others have claimed that some developers don't know how to ask for outside help or
are reluctant to give up control of their projects to external contributors.
We don't have data about how often this happens but apparently often enough
to be visible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to Help&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As a user (or developer) clearly communicate your intentions and expectations.
If you feel the other party doesn't quite understand you explain where are you
coming from. It is possible that you working environment and mental processes
are quite alien to them and they don't see the point in your words. If there is
a local technology user group or a near-by event then go meet the other guy
and buy them a beer.&lt;/p&gt;
&lt;h2&gt;Why Should You Care&lt;/h2&gt;
&lt;p&gt;If you are still reading then chances are you've experienced some of these
problems yourself. We certainly have seen quite a few from the list above.
The bottom line is that whenever you have problems with a particular open
source project don't expect somebody to help you. Open source comes at a
price and it is being able to help yourself or fix your own problems. Kind
of like buying a new car without a warranty and a mechanic.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Practical example - Sphinx&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sphinx &lt;a href="https://github.com/sphinx-doc/sphinx/pull/1902"&gt;PR #1902&lt;/a&gt; introduces
new features to the inheritance diagram plugin but also adds new tests for
the existing code base as well as new tests for the proposed modifications.
6 months later and the PR is still open, not even undergone code review.
Later in commit 4c4450 the core devel team changes a parameter type in one
of the functions used by the inheritance diagram plugin. Not having any tests
for the caller code they make a backward incompatible change which is still
broken in the master branch. For the fix see 
&lt;a href="https://github.com/atodorov/sphinx/commit/d67fee57f000385cb48dba6cb1c725ddb0e0e2c0"&gt;commit d67fee&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Practical example - dnf-plugins-core&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;dnf download&lt;/em&gt; command in Fedora had a test suite which used badly
designed test stubs. They have been redesigned in
&lt;a href="https://github.com/rpm-software-management/dnf-plugins-core/pull/118"&gt;PR #118&lt;/a&gt;
but developers requested the refactoring be merged together with
&lt;a href="https://github.com/rpm-software-management/dnf-plugins-core/pull/113"&gt;PR #113&lt;/a&gt;
which also adds new functionality. 2 months afterwards comes
&lt;a href="https://github.com/rpm-software-management/dnf-plugins-core/commit/fe130669ffc4c1d6eba8f10cda35ab4d803d5a3d"&gt;commit fe1306&lt;/a&gt;
which changes behavior in the same plugin. The badly designed test stubs
ignored the change silently and it landed in the master branch. The newly
redesigned tests broke immediately but they were still under review and not
merged until 1 month later.&lt;/p&gt;
&lt;p&gt;Many developers and companies consuming open source software are OK
(or OK-ish) with this state of art. They've accepted that they have to
fix their own problems or work around them when the time comes.
This is how the open source is expected to work, isn't it ?&lt;/p&gt;
&lt;p&gt;If you happen to be from those folks who don't have enough technical
knowledge to work on a particular project or don't have the time to
do so please consider &lt;a href="http://mrsenko.com/subscribe.html"&gt;subscribing to Mr. Senko&lt;/a&gt;!
We're happy to provide open source support to those who need it.&lt;/p&gt;</summary></entry><entry><title>January 2016 Report</title><link href="http://mrsenko.com/blog/2016/02/03/january-2016-report/" rel="alternate"></link><published>2016-02-03T22:30:00+02:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-02-03:blog/2016/02/03/january-2016-report/</id><summary type="html">&lt;p&gt;This is my first status report for &lt;a href="http://MrSenko.com"&gt;Mr. Senko&lt;/a&gt;. During
January 2016 I've worked on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Improvements to
&lt;a href="https://github.com/gilsondev/pelican-clean-blog/pulls?q=is%3Apr+author%3Aatodorov+is%3Aclosed"&gt;pelican-clean-blog&lt;/a&gt;
theme&lt;/li&gt;
&lt;li&gt;URL updates in &lt;code&gt;package.json&lt;/code&gt; for several Node.js packages;&lt;/li&gt;
&lt;li&gt;.spec file to build RPMs for
&lt;a href="https://github.com/django-ses/django-ses/pull/83"&gt;django-ses&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;New test case for
&lt;a href="https://github.com/belgian-elixir-study-group/efl/pull/5"&gt;Elixir study exercises&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updates to an old PR for
&lt;a href="https://github.com/sphinx-doc/sphinx/pull/1902"&gt;Sphinx&lt;/a&gt; which also fixes a
new regression;&lt;/li&gt;
&lt;li&gt;Filed a
&lt;a href="https://github.com/getpelican/pelican/issues/1902"&gt;RFE&lt;/a&gt; against Pelican
and will continue working on it this month.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Sphinx broke&lt;/h2&gt;
&lt;p&gt;The Sphinx changes are particularly interesting - the fix for
issue #656 in commit 4c4450d changes the Graphviz's
&lt;code&gt;node['options']&lt;/code&gt; type from &lt;code&gt;list&lt;/code&gt; to &lt;code&gt;dict&lt;/code&gt; which in turn breaks
&lt;code&gt;html_visit_inheritance_diagram()&lt;/code&gt; and the inheritance_diagram extension.&lt;/p&gt;
&lt;p&gt;My previous work on this PR introduced some basic tests, which were missing
and they caught the type change! Because the tests and my latest changes are
not yet merged into master the &lt;code&gt;inheritance_diagram.py&lt;/code&gt; extension is still
broken! The tests fail in Travis-CI but probably due to &lt;code&gt;dot&lt;/code&gt; not being
installed. Locally everything seems to work.&lt;/p&gt;
&lt;p&gt;Its also worth mentioning that it's been 2 weeks since I've updated my PR
and a bit more since Sphinx introduced the regression. As far as I can see
there's not been any updates with respect to this. 
If you'd like to get a
faster response cycle please &lt;strong&gt;consider subscribing to
&lt;a href="http://mrsenko.com/subscribe.html"&gt;Mr. Senko&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>FOSDEM 2016 Report</title><link href="http://mrsenko.com/blog/2016/01/31/fosdem-2016-report/" rel="alternate"></link><published>2016-01-31T19:30:00+02:00</published><author><name>Mr. Senko</name></author><id>tag:mrsenko.com,2016-01-31:blog/2016/01/31/fosdem-2016-report/</id><summary type="html">&lt;p&gt;Hello everyone, &lt;a href="http://MrSenko.com"&gt;Mr. Senko&lt;/a&gt; flew to Brussels for his first
public appearances and we are very excited about this. He visited
&lt;a href="http://fosdem.org"&gt;FOSDEM&lt;/a&gt; to get an update on the latest news in open source
and scored the highest ping-pong score for
&lt;a href="https://twitter.com/atodorov_/status/693762736765976576"&gt;BBC Open Source&lt;/a&gt;
on Sunday!
He also learned a bit about &lt;a href="http://elixir-lang.org"&gt;Elixir&lt;/a&gt; with the
Belgian Elixir Study group, attended a panel on open source and start-ups
organized by &lt;a href="http://europe.startupbus.com"&gt;The Startup Bus&lt;/a&gt;
and made lots of new friends. Here are some of
the details and links for further reading.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ping-pong with computers" src="/images/bbc_ping_pong.jpg" title="Ping-pong with computers" /&gt;&lt;/p&gt;
&lt;h2&gt;Friday - Day 0&lt;/h2&gt;
&lt;p&gt;Friday was a fruitful day for Mr. Senko. It started with a meeting at
&lt;a href="http://betacowork"&gt;BetaCowork&lt;/a&gt; - one of the co-working spaces in Brussels
and continued with a visit to
&lt;a href="http://www.erlang-factory.com/brussels2016/"&gt;Brussels Erlang Factory Lite&lt;/a&gt;
where we learned a bit about Erlang and Elixir and even managed to create a
&lt;a href="https://github.com/belgian-elixir-study-group/efl/pull/5"&gt;small pull request&lt;/a&gt;
as part of the exercises. Funny enough, one of the organizers,
&lt;a href="https://twitter.com/less_software"&gt;Yuri Leikind&lt;/a&gt; was spot on to recognize our
Bulgarian accent.&lt;/p&gt;
&lt;p&gt;BetaCowork was bursting with people who've come for FOSDEM. There was a GNOME
team and the Libre Office Italian team! The place is huge and is definitely
an alternative for the entrepreneurs who are tired of working from home! It
is also very close to ULB so next time you visit FOSDEM definitely check their
events schedule as well.&lt;/p&gt;
&lt;h2&gt;Saturday - Day 1&lt;/h2&gt;
&lt;p&gt;Saturday was the
&lt;a href="https://fosdem.org/2016/schedule/track/testing_and_automation/"&gt;Testing and Automation&lt;/a&gt;
day. The morning track showed us &lt;a href="http://frida.re"&gt;Frida&lt;/a&gt; - a tool
which injects JavaScript into existing processes and could be used for testing
interoperability with closed source applications. Another interesting use case
is overriding the standard &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; functions in order to automate testing
of interactive text based applications on Linux. Mr. Senko had the pleasure talking
to Frida's authors on both days. These are extremely tallented and knowledgeable
folks so definitely keep an eye on their work.&lt;/p&gt;
&lt;p&gt;In the afternoon the room got packed when Marcin and Lukasz presented their
experience with
&lt;a href="https://github.com/jenkinsci/job-dsl-plugin"&gt;Jenkins Job DSL&lt;/a&gt; plugin.
The plugin is very flexible and powerfull, using Groovy
as its programming language. The only drawback is that it is
sometimes too complex to use and requires a steep learning curve.
Regardless of this the only tools we know about related to
Jenkins as Code are the Jenkins Job DSL and Jenkins Job Builder plugins.&lt;/p&gt;
&lt;p&gt;In the evening Mr. Senko visited a panel talk about
&lt;a href="https://www.eventbrite.com/e/startupbusaccelerate-the-impact-of-open-source-software-on-the-tech-industry-tickets-20869395925"&gt;the impact of open source on the tech industry&lt;/a&gt;
at the second big co-workign space in Brussels - &lt;a href="http://co-station.com"&gt;Co.Station&lt;/a&gt;.
The place is in the city center so definitely worth to visit at any time.
Mr. Senko made quite a few new friends there and possibly found potential
pilot customers. We've also made contact with the organizers of
&lt;a href="http://europe.startupbus.com"&gt;Startup Bus Europe&lt;/a&gt; and hopefully we'll see
the bus coming to Sofia as well. And we also got invited to the first
&lt;a href="https://www.linkedin.com/pulse/setting-up-first-angular-conference-belgium-sam-vloeberghs"&gt;Angular.js conference in Belgium&lt;/a&gt;
and with a bit of luck you'll see a talk from us in the summer.&lt;/p&gt;
&lt;h2&gt;Sunday - Day 2&lt;/h2&gt;
&lt;p&gt;Sunday was the lazy day. The only talk of interest to Mr. Senko was
&lt;a href="https://fosdem.org/2016/schedule/event/tweaking_ruby_gc/"&gt;Tweaking Ruby GC parameters for speed and profit&lt;/a&gt;
. The rest of the time was spent networking, collecting t-shirts,
reporting
&lt;a href="https://fedorahosted.org/fedora-infrastructure/ticket/5085"&gt;a bug against Fedora Account System&lt;/a&gt;
and meeting with old friends.&lt;/p&gt;
&lt;p&gt;&lt;img alt="hammer down" src="/images/bbc_hammer_game.jpg" title="hammer down" /&gt;&lt;/p&gt;
&lt;p&gt;In the early afternoon Mr. Senko played a few geeky games at the BBC Open Source
stand. BBC is developing the &lt;a href="https://www.microbit.co.uk/"&gt;micro:bit&lt;/a&gt; - a small computer which is intended to
teach programming to small children. With its help they has built a ping-pong
device which counts how many times you hit the ball.&lt;/p&gt;
&lt;p&gt;In the second game you had to smash a
red circle with a foam hammer as soon as it lighted up. Mr. Senko managed to
win the first game and then lost the second one. He even got to test the device
and tried to crash it by scoring penalty points when the counter was still zero.
BBC definitely did their job right because the device didn't crash.&lt;/p&gt;
&lt;p&gt;Thank you for taking the time to read this report. See you at the next event!&lt;/p&gt;</summary></entry><entry><title>Founding of Mr. Senko</title><link href="http://mrsenko.com/blog/2016/01/10/founding-of-mr-senko/" rel="alternate"></link><published>2016-01-10T14:00:00+02:00</published><author><name>Alexander Todorov</name></author><id>tag:mrsenko.com,2016-01-10:blog/2016/01/10/founding-of-mr-senko/</id><summary type="html">&lt;p&gt;Hello everyone, welcome to &lt;a href="http://MrSenko.com"&gt;Mr. Senko&lt;/a&gt;! We are a group of friends who have
been working with open source for the last 10 years. During this time we've
seen technologies come and go and hype projects becoming abandoned months later.
We've seen the pain when companies had to rewrite their software because of this
and the struggle to get your patches accepted upstream.
Don't you wish you had somebody who could take care of all the hassle for you?&lt;/p&gt;
&lt;p&gt;Mr. Senko is our attempt at providing commercial support for open source projects,
specifically libraries which other companies use to build their products. As of now
we have diverse experience in Java, Python and JavaScript as well as my personal
experience with Quality Assurance.&lt;/p&gt;
&lt;p&gt;In the next weeks and months we will be refining our value proposition and building
the team so we can offer you great technical support and expertise. We plan to blog
regularly about our progress and about technology and open source events in general! 
You can follow us at &lt;a href="https://twitter.com/Mr_Senko"&gt;@Mr_Senko&lt;/a&gt; or tweet at the wizard
using the &lt;strong&gt;#MrSenko&lt;/strong&gt; hashtag! &lt;/p&gt;
&lt;p&gt;Stay tuned for more news!&lt;/p&gt;</summary></entry></feed>